{"version":3,"sources":["utils/API.js","components/Timer/index.js","components/CloseButton.js","components/ProfileCard.js","context/UserContext.js","pages/Profile.js","utils/Auth.js","components/LogInForm.js","pages/Login.js","components/NewBrewForm/index.js","pages/NewBrew.js","components/Card/index.js","pages/Home.js","components/SignUpForm.js","pages/SignUp.js","components/ProtectedRoute.js","components/NavBar/index.js","App.js","index.js"],"names":["signup","input","axios","post","authenticate","getUser","get","headers","Authorization","localStorage","getItem","createRecipe","recipe","deleteRecipe","delete","getUserRecipes","id","getAllRecipes","Timer","props","state","brewDate","Date","endTime","date","timer","this","timerID","setInterval","tick","clearInterval","msecs","days","Math","floor","hours","mins","secs","t","setState","timetoBrew","Component","CloseButton","IconButton","aria-label","onClick","e","preventDefault","console","log","API","_id","response","json","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","marginBottom","marginTop","image","margin","marginLeft","float","ProfileCard","classes","Grid","container","item","xs","key","Paper","className","variant","elevation","justify","Typography","title","user","sm","src","picture","style","width","alt","category","ingredients","length","map","ingredient","amount","units","description","brewLength","createContext","Profile","database","recipes","search","brewStatus","setUser","handleInputChange","event","target","name","value","filterFeed","loadRecipes","username","then","res","data","filteredrecipes","filter","isMatch","categoryFilter","ingredientFilter","statusFilter","searchTerm","i","toLowerCase","FormControl","fullWidth","InputLabel","Input","onChange","NativeSelect","FormHelperText","status","contextType","UserContext","Auth","isLoggedIn","logIn","password","cb","setItem","token","logOut","removeItem","getToken","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","withRouter","useState","fieldValues","setFieldValues","useContext","changeHandler","newFieldValues","submitHandler","history","push","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","noValidate","TextField","required","label","autoComplete","autoFocus","type","Button","color","Link","href","Login","NewBrewForm","startTime","loading","parseInt","handleDateChange","deleteIngredient","filteredArr","obj","calcEndDate","setMinutes","getMinutes","setHours","getHours","setDate","getDate","calcBrewLength","addIngredient","unique","newIng","imageUpload","a","async","files","FormData","append","fetch","method","body","file","secure_url","handleSubmit","context","result","catch","err","fileInput","min","placeholder","multiline","utils","DateFnsUtils","format","max","ref","size","NewBrew","Card","Home","errors","fontWeight","formValid","formErrors","valid","Object","values","forEach","val","confirmPassword","formValues","setFormValues","defaultFormErrors","duplicate","setFormErrors","newFormErrors","error","SignUpPage","SignUpForm","ProtectedRoute","rest","render","to","breakpoints","down","link","fontSize","appitems","NavBar","AppBar","position","Toolbar","loggedIn","createMuiTheme","primary","App","ThemeProvider","Provider","exact","path","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.14dd16dd.chunk.js","sourcesContent":["import axios from \"axios\";\nexport default {\n  signup: function(input) {\n    return axios.post(\"/api/signup\", input);\n  },\n  //probably need to send username or password with request?\n  authenticate: function(input) {\n    return axios.post(\"/api/authenticate\", input);\n  },\n  getUser: function() {\n    return axios.get(\"/api/me\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n  },\n  createRecipe: function(recipe) {\n    return axios.post(\"/api/recipes\", recipe);\n  },\n  deleteRecipe: function() {\n    axios.delete(\"/api/recipes/\");\n  },\n  getUserRecipes: function(id) {\n    return axios.get(\"/api/recipes/\" + id);\n  },\n  getAllRecipes: function() {\n    return axios.get(\"/api/recipes\");\n  }\n};\n","import React, { Component } from \"react\";\n\nclass Timer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            brewDate: new Date(this.props.endTime),\n            date: new Date(),\n            timer: \"00:00:00:00\"\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    timetoBrew(msecs) {\n        if (msecs <= 0) {\n            return \"FINISHED!\";\n        } else {\n            let days = Math.floor(msecs / (24 * 60 * 60 * 1000));\n            msecs = msecs % (24 * 60 * 60 * 1000);\n            let hours = Math.floor(msecs / (60 * 60 * 1000));\n\n            msecs = msecs % (60 * 60 * 1000);\n            let mins = Math.floor(msecs / (60 * 1000));\n\n            msecs = msecs % (60 * 1000);\n            let secs = Math.floor(msecs / 1000);\n\n            let timerStr = `${days} days ${hours} hours ${mins} minutes ${secs} seconds`;\n            return timerStr;\n        }\n    }\n\n    tick() {\n        let t = this.state.brewDate - this.state.date;\n        this.setState({\n            date: new Date(),\n            timer: this.timetoBrew(t)\n        });\n    }\n\n    render() {\n        return (\n            <>{this.state.timer}</>\n        );\n    }\n}\n\nexport default Timer;","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport API from \"../utils/API\";\n\nexport default function CloseButton(props) {\n  const handleDelete = e => {\n    e.preventDefault();\n    console.log(\"I deleted\");\n    API.deleteRecipe(props._id, response => {\n      response.json(\"Delete Complete\");\n    });\n  };\n\n  return (\n    <IconButton aria-label=\"delete\" onClick={handleDelete}>\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"./Timer\";\nimport CloseButton from \"./CloseButton\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: \"left\"\n  }\n}));\n\nconst ProfileCard = props => {\n  const classes = useStyles();\n\n  return (\n    <Grid container item xs={12} key={props.id} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n        <Grid container item xs={12} spacing={2}>\n          <Grid container xs={12} justify=\"space-between\">\n            <Typography variant=\"h5\">\n              {props.title} by {props.user ? props.user : \"Anonymous User\"}{\" \"}\n            </Typography>\n            <CloseButton />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <img\n              className={classes.image}\n              src={\n                props.picture !== \"\"\n                  ? props.picture\n                  : \"./images/fermention-default.jpg\"\n              }\n              style={{ width: \"100%\" }}\n              alt=\"User Brew\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">\n              <b>Category:&nbsp;</b>\n              {props.category}\n            </Typography>\n\n            <Typography variant=\"body1\">\n              <b>Ingredients:</b>{\" \"}\n            </Typography>\n            <ul>\n              {props.ingredients.length > 0 ? (\n                props.ingredients.map(ingredient => (\n                  <li key={ingredient.ingredient}>\n                    {ingredient.ingredient}&nbsp;{ingredient.amount}\n                    {ingredient.units}\n                  </li>\n                ))\n              ) : (\n                <p>(None Listed)</p>\n              )}\n            </ul>\n\n            <Typography variant=\"body1\">\n              <b>Description:&nbsp;</b>\n              {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Total Brew Time:</b> {props.brewLength}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Brewing Status:</b> <Timer endTime={props.endTime}></Timer>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default ProfileCard;\n","import { createContext } from \"react\";\n\nexport default createContext();","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport {\n  Grid,\n  InputLabel,\n  NativeSelect,\n  FormControl,\n  Input,\n  FormHelperText\n} from \"@material-ui/core\";\nimport UserContext from \"../context/UserContext\";\n\nclass Profile extends Component {\n  state = {\n    user: \"\",\n    database: [],\n    recipes: [],\n    category: \"All\",\n    search: \"\",\n    brewStatus: \"All\"\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      API.getUser().then(response => {\n        this.setUser(response.data);\n        this.loadRecipes();\n      });\n    }\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  };\n\n  filterFeed() {\n    const filteredrecipes = this.state.database.filter(recipe => {\n      let isMatch = true;\n      if (this.state.category !== \"All\") {\n        isMatch = isMatch && this.categoryFilter(recipe);\n      }\n\n      if (this.state.search) {\n        isMatch = isMatch && this.ingredientFilter(recipe);\n      }\n\n      if (this.state.brewStatus !== \"All\") {\n        isMatch = isMatch && this.statusFilter(recipe);\n      }\n      return isMatch;\n    });\n    this.setState({ recipes: filteredrecipes });\n  }\n\n  //Filters by chosen category\n  categoryFilter(recipe) {\n    return recipe.category === this.state.category;\n  }\n\n  //Filters by brew status\n  statusFilter(recipe) {\n    if (this.state.brewStatus === \"Finished\") {\n      return new Date(recipe.endTime) < new Date();\n    } else if (this.state.brewStatus === \"Brewing\") {\n      return new Date(recipe.endTime) > new Date();\n    }\n  }\n\n  //Searches array for ingredients\n  ingredientFilter(recipe) {\n    const searchTerm = this.state.search;\n    if (recipe.ingredients.length !== 0) {\n      for (let i = 0; i < recipe.ingredients.length; i++) {\n        if (\n          recipe.ingredients[i].ingredient.toLowerCase() ===\n          searchTerm.toLowerCase()\n        ) {\n          return (\n            recipe.ingredients[i].ingredient.toLowerCase() ===\n            searchTerm.toLowerCase()\n          );\n        }\n      }\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        this.filterFeed();\n      }\n    );\n  };\n\n  loadRecipes = () => {\n    API.getUserRecipes(this.state.user.username).then(res => {\n      this.setState({\n        database: res.data,\n        recipes: res.data\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Grid container justify=\"center\" spacing={6}>\n        <Grid item xs={12} sm={8}>\n          <FormControl fullWidth={true}>\n            <InputLabel>Search Ingredients</InputLabel>\n            <Input\n              value={this.state.search}\n              name=\"search\"\n              onChange={this.handleInputChange}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid container item justify=\"center\" spacing={6} xs={12} sm={8}>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth={true}>\n              <NativeSelect\n                value={this.state.category}\n                name=\"category\"\n                onChange={this.handleInputChange}\n              >\n                <option value={\"All\"}>All</option>\n                <option value={\"Beer\"}>Beer</option>\n                <option value={\"Vinegar\"}>Vinegar</option>\n                <option value={\"Bread\"}>Bread</option>\n                <option value={\"Pickle\"}>Pickle</option>\n                <option value={\"Kombucha\"}>Kombucha</option>\n                <option value={\"Miso\"}>Miso</option>\n                <option value={\"Wine\"}>Wine</option>\n                <option value={\"Kimchi\"}>Kimchi</option>\n                <option value={\"Other\"}>Other</option>\n              </NativeSelect>\n              <FormHelperText>Filter by Category</FormHelperText>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth={true}>\n              <NativeSelect\n                value={this.state.status}\n                name=\"brewStatus\"\n                onChange={this.handleInputChange}\n              >\n                <option value={\"All\"}>All</option>\n                <option value={\"Finished\"}>Finished</option>\n                <option value={\"Brewing\"}>Currently Brewing</option>\n              </NativeSelect>\n              <FormHelperText>Filter by Brewing Status</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Grid container item justify=\"center\" xs={12} sm={8}>\n          {this.state.recipes.length > 0 ? (\n            <>\n              {this.state.recipes.map(recipe => (\n                <ProfileCard\n                  key={recipe._id}\n                  id={recipe._id}\n                  category={recipe.category}\n                  title={recipe.title}\n                  description={recipe.description}\n                  user={recipe.user}\n                  picture={recipe.picture}\n                  ingredients={recipe.ingredients}\n                  endTime={recipe.endTime}\n                  brewLength={recipe.brewLength}\n                >\n                  {\" \"}\n                </ProfileCard>\n              ))}\n            </>\n          ) : (\n            <Grid item xs={12} sm={8}>\n              <h3>No Results to Display</h3>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nProfile.contextType = UserContext;\n\nexport default Profile;\n","import axios from \"axios\";\n\nfunction Auth() {\n\n  function logIn(username, password, cb) {\n    axios.post(\"/api/authenticate\", { username: username, password: password })\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken\n  }\n}\n\nexport default Auth();\n","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LogIn(props) {\n    const [fieldValues, setFieldValues] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const user = useContext(UserContext);\n\n    const changeHandler = (e) => {\n        const { name, value } = e.target;\n        const newFieldValues = { ...fieldValues, [name]: value };\n        setFieldValues(newFieldValues);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const { username, password } = fieldValues;\n        if (username && password) {\n            Auth.logIn(username, password, (response) => {\n                user.setUser(response);\n                props.history.push(\"/\");\n            });\n        }\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form className={classes.form} onSubmit={submitHandler} noValidate>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                value={fieldValues.username}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={fieldValues.password}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={submitHandler}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default withRouter(LogIn);","import React from \"react\";\nimport LoginForm from \"../components/LogInForm\";\n\nfunction Login() {\n\n    return (\n        <>\n            <LoginForm /></>\n    );\n}\n\nexport default Login;","import 'date-fns';\nimport React, { Component } from \"react\";\nimport { Button, TextField, Container, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport API from \"../../utils/API\"\nimport \"./style.css\";\nimport UserContext from '../../context/UserContext';\n\nclass NewBrewForm extends Component {\n    static contextType = UserContext;\n\n    //Sets state\n    state = {\n        title: \"\",\n        category: \"Other\",\n        description: \"\",\n        ingredients: [],\n        startTime: new Date(),\n        endTime: new Date(),\n        days: 0,\n        hours: 0,\n        mins: 0,\n        picture: \"\",\n        ingredient: \"\",\n        amount: 1,\n        units: \"mL\",\n        loading: false\n    }\n\n    //Handles changes in input\n    handleInputChange = event => {\n        const { name, value, type } = event.target;\n\n        this.setState({\n            [name]: type === 'number' ? parseInt(value) : value\n        });\n\n    };\n\n    //Handles changes in date\n    handleDateChange = date => {\n        this.setState({\n            startTime: date\n        });\n    };\n\n    //Deletes specific ingredient\n    deleteIngredient = name => {\n        let filteredArr = this.state.ingredients.filter(function (obj) {\n            return obj.ingredient !== name;\n        });\n\n        this.setState({\n            ingredients: filteredArr\n        });\n    };\n\n    //Adds time from brew lenght to create end time\n    calcEndDate = (days, hours, mins) => {\n        let endTime = new Date();\n        let startTime = this.state.startTime;\n        endTime.setMinutes(startTime.getMinutes() + mins);\n        endTime.setHours(endTime.getHours() + hours);\n        endTime.setDate(endTime.getDate() + days);\n        return endTime;\n    }\n\n    //Formats brew length\n    calcBrewLength = (days, hours, mins) => {\n        let brewLength = `${days} days ${hours} hours ${mins} minutes 00 seconds`\n        return brewLength;\n    }\n\n    //Adds new ingredient\n    addIngredient = event => {\n        event.preventDefault();\n        let ingredients = this.state.ingredients;\n        let unique = true;\n\n        for (let i = 0; i < ingredients.length; i++) {\n            if (this.state.ingredient.toLowerCase() === ingredients[i].ingredient.toLowerCase()) {\n                unique = false;\n            }\n        }\n\n        if (this.state.ingredient && unique) {\n            let newIng = {\n                ingredient: this.state.ingredient,\n                amount: this.state.amount,\n                units: this.state.units\n            }\n            this.setState({\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\",\n                ingredients: [...ingredients, newIng]\n            });\n        }\n    }\n\n    //image uploading\n    imageUpload = async event => {\n        const files = event.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'fermention');\n        this.setState({ loading: true });\n        const res = await fetch(\n            'https://api.cloudinary.com/v1_1/dyiisb9c8/image/upload',\n            {\n                method: 'POST',\n                body: data\n            }\n        )\n        const file = await res.json();\n\n        this.setState({\n            picture: file.secure_url,\n            loading: false\n        });\n\n\n\n    }\n\n    //Creates new brew\n    handleSubmit = event => {\n        event.preventDefault();\n        const data = {\n            user: this.context.user.username,\n            title: this.state.title,\n            category: this.state.category,\n            ingredients: this.state.ingredients,\n            description: this.state.description,\n            startTime: this.state.startTime,\n            endTime: this.calcEndDate(this.state.days, this.state.hours, this.state.mins),\n            brewLength: this.calcBrewLength(this.state.days, this.state.hours, this.state.mins),\n            picture: this.state.picture\n        }\n\n        //Only uploads to database if title exists\n        if (this.state.title !== \"\") {\n            // console.log(data)\n\n            //Runs API function\n            API.createRecipe(data)\n                .then(result => {\n                    // console.log(result)\n                })\n                .catch(err => console.log(err))\n\n            //Resets state\n            this.setState({\n                title: \"\",\n                category: \"Other\",\n                description: \"\",\n                ingredients: [],\n                startTime: new Date(),\n                endTime: new Date(),\n                days: 0,\n                hours: 0,\n                mins: 0,\n                picture: \"\",\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\"\n            });\n\n            //Resets file input\n            this.fileInput.value = \"\";\n\n        }\n\n    };\n\n    //Renders form\n    render() {\n        // console.log(this.context.user);\n        return (\n            <>\n                <Container maxWidth=\"sm\">\n                    <FormControl\n                        fullWidth={true}>\n                        <h6 >Title:</h6>\n                        <Input\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={this.handleInputChange} />\n                        <FormHelperText >Required</FormHelperText>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Category:</h6>\n                        <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                            <option value={\"Other\"}>Other</option>\n                            <option value={\"Beer\"}>Beer</option>\n                            <option value={\"Vinegar\"}>Vinegar</option>\n                            <option value={\"Bread\"}>Bread</option>\n                            <option value={\"Pickle\"}>Pickle</option>\n                            <option value={\"Kombucha\"}>Kombucha</option>\n                            <option value={\"Miso\"}>Miso</option>\n                            <option value={\"Wine\"}>Wine</option>\n                            <option value={\"Kimchi\"}>Kimchi</option>\n                        </NativeSelect>\n                    </FormControl>\n                    <FormControl fullWidth={true}>\n                        <h6>Ingredients:</h6>\n                        <ul className=\"ingList\">\n                            {this.state.ingredients.map(item => (\n                                <li className=\"ingListItem\" key={item.ingredient}>\n                                    {item.ingredient}: {item.amount}{item.units}\n                                    <button id=\"ingBtn\" onClick={() => this.deleteIngredient(item.ingredient)}>&times;</button>\n                                </li>\n                            ))}\n                        </ul>\n                        <div>\n                            <h5 className=\"subLabel\">Name:</h5>\n                            <input\n                                value={this.state.ingredient}\n                                id=\"ingName\"\n                                className=\"subInput\"\n                                name=\"ingredient\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Amount:</h5>\n                            <input\n                                value={this.state.amount}\n                                id=\"ingAmount\"\n                                className=\"subInput\"\n                                type=\"number\"\n                                min={1}\n                                placeholder={1}\n                                name=\"amount\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Unit:</h5>\n                            <NativeSelect\n                                value={this.state.units}\n                                className=\"subInput\"\n                                id=\"ingUnit\"\n                                name=\"units\"\n                                onChange={this.handleInputChange}>\n                                <option value={\"mL\"}>mL</option>\n                                <option value={\"L\"}>L</option>\n                                <option value={\"mg\"}>mg</option>\n                                <option value={\"g\"}>g</option>\n                                <option value={\"kg\"}>kg</option>\n                            </NativeSelect>\n                            <br></br>\n                            <button id=\"ingBtn\" onClick={this.addIngredient}>+</button>\n                        </div>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Description:</h6>\n                        <TextField\n                            multiline\n                            value={this.state.description}\n                            onChange={this.handleInputChange}\n                            name=\"description\"\n                        />\n                    </FormControl>\n\n\n                    <FormControl>\n                        <h6>Start Time:</h6>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                            <KeyboardTimePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormControl>\n\n                    <FormControl fullWidth={true}>\n                        <h6>Brew Time:</h6>\n                        <div>\n                            <h5 className=\"subLabel\">Days:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"days\"\n                                type=\"number\"\n                                min={0}\n                                name=\"days\"\n                                onChange={this.handleInputChange}\n                                placeholder={0}\n                                value={this.state.days}>\n                            </input>\n\n                            <br></br>\n                            <h5 className=\"subLabel\">Hours:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={23}\n                                name=\"hours\"\n                                value={this.state.hours}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Minutes:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={59}\n                                name=\"mins\"\n                                value={this.state.mins}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                        </div>\n                    </FormControl>\n\n                    <FormControl>\n                        <h6>Image:</h6>\n                        <input type=\"file\"\n                            name=\"file\"\n                            onChange={this.imageUpload}\n                            ref={ref => this.fileInput = ref}\n                        ></input>\n                        {this.state.picture ? (\n                            <img src={this.state.picture} alt=\"Uploaded Brew\" style={{ width: '200px' }}></img>\n                        ) : (\n                                <p>No image uploaded.</p>\n                            )}\n\n                    </FormControl>\n\n                    <div id=\"wrapper\">\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            id=\"createBtn\"\n                            onClick={this.handleSubmit}>\n                            Create New Brew</Button>\n                    </div>\n\n\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default NewBrewForm;\n","import React from \"react\";\nimport NewBrewForm from \"../components/NewBrewForm\";\n\nfunction NewBrew() {\n    return (\n\n        <NewBrewForm />\n\n    );\n}\n\nexport default NewBrew;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"../Timer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: \"left\"\n  }\n}));\n\nconst Card = props => {\n  const classes = useStyles();\n\n  return (\n    <Grid container item xs={12} key={props.id} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n        <Grid container item xs={12} spacing={2}>\n          <Grid container xs={12} justify=\"space-between\">\n            <Typography variant=\"h5\">\n              {props.title} by {props.user ? props.user : \"Anonymous User\"}{\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <img\n              className={classes.image}\n              src={\n                props.picture !== \"\"\n                  ? props.picture\n                  : \"./images/fermention-default.jpg\"\n              }\n              style={{ width: \"100%\" }}\n              alt=\"User Brew\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">\n              <b>Category:&nbsp;</b>\n              {props.category}\n            </Typography>\n\n            <Typography variant=\"body1\">\n              <b>Ingredients:</b>{\" \"}\n            </Typography>\n            <ul>\n              {props.ingredients.length > 0 ? (\n                props.ingredients.map(ingredient => (\n                  <li key={ingredient.ingredient}>\n                    {ingredient.ingredient}&nbsp;{ingredient.amount}\n                    {ingredient.units}\n                  </li>\n                ))\n              ) : (\n                <p>(None Listed)</p>\n              )}\n            </ul>\n\n            <Typography variant=\"body1\">\n              <b>Description:&nbsp;</b>\n              {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Total Brew Time:</b> {props.brewLength}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Brewing Status:</b> <Timer endTime={props.endTime}></Timer>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport { Grid, InputLabel, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\n\n\n\nclass Home extends Component {\n    state = {\n        database: [],\n        recipes: [],\n        category: \"All\",\n        search: \"\",\n        brewStatus: \"All\"\n    }\n\n    componentDidMount() {\n        this.loadRecipes();\n    }\n\n    filterFeed() {\n        const filteredrecipes = this.state.database.filter(recipe => {\n            let isMatch = true;\n            if (this.state.category !== \"All\") {\n                isMatch = isMatch && this.categoryFilter(recipe);\n            }\n\n            if (this.state.search) {\n                isMatch = isMatch && this.ingredientFilter(recipe);\n            }\n\n            if (this.state.brewStatus !== \"All\") {\n                isMatch = isMatch && this.statusFilter(recipe);\n            }\n            return isMatch;\n        });\n        this.setState({ recipes: filteredrecipes });\n    }\n\n    //Filters by chosen category\n    categoryFilter(recipe) {\n        return recipe.category === this.state.category;\n    }\n\n    //Filters by brew status\n    statusFilter(recipe) {\n        if (this.state.brewStatus === \"Finished\") {\n            return new Date(recipe.endTime) < new Date();\n        } else if (this.state.brewStatus === \"Brewing\") {\n            return new Date(recipe.endTime) > new Date();\n        }\n    }\n\n    //Searches array for ingredients\n    ingredientFilter(recipe) {\n        const searchTerm = this.state.search;\n        if (recipe.ingredients.length !== 0) {\n            for (let i = 0; i < recipe.ingredients.length; i++) {\n                if (recipe.ingredients[i].ingredient.toLowerCase() === searchTerm.toLowerCase()) {\n                    return recipe.ingredients[i].ingredient.toLowerCase() === searchTerm.toLowerCase()\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.filterFeed();\n        });\n    };\n\n    loadRecipes = () => {\n        API.getAllRecipes()\n            .then(res =>\n                this.setState({\n                    database: res.data,\n                    recipes: res.data\n                }))\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={6}>\n                <Grid item xs={12} sm={8} >\n                    <FormControl\n                        fullWidth={true}>\n                        <InputLabel>Search Ingredients</InputLabel>\n                        <Input\n                            value={this.state.search}\n                            name=\"search\"\n                            onChange={this.handleInputChange} />\n                    </FormControl>\n                </Grid>\n\n                <Grid container item justify=\"center\" spacing={6} xs={12} sm={8} >\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Beer\"}>Beer</option>\n                                <option value={\"Vinegar\"}>Vinegar</option>\n                                <option value={\"Bread\"}>Bread</option>\n                                <option value={\"Pickle\"}>Pickle</option>\n                                <option value={\"Kombucha\"}>Kombucha</option>\n                                <option value={\"Miso\"}>Miso</option>\n                                <option value={\"Wine\"}>Wine</option>\n                                <option value={\"Kimchi\"}>Kimchi</option>\n                                <option value={\"Other\"}>Other</option>\n                            </NativeSelect>\n                            <FormHelperText>Filter by Category</FormHelperText>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.status} name=\"brewStatus\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Finished\"}>Finished</option>\n                                <option value={\"Brewing\"}>Currently Brewing</option>\n\n                            </NativeSelect>\n                            <FormHelperText>Filter by Brewing Status</FormHelperText>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <Grid container item justify=\"center\" xs={12} sm={8}>\n                    {this.state.recipes.length > 0 ? (\n                        <>\n                            {this.state.recipes.map(recipe => (\n\n\n\n                                <Card key={recipe._id}\n                                    id={recipe._id}\n                                    category={recipe.category}\n                                    title={recipe.title}\n                                    description={recipe.description}\n                                    user={recipe.user}\n                                    picture={recipe.picture}\n                                    ingredients={recipe.ingredients}\n                                    endTime={recipe.endTime}\n                                    brewLength={recipe.brewLength}> </Card>\n\n\n\n                            ))}\n                        </>\n                    ) : (\n                            <Grid item xs={12} sm={8} ><h3>No Results to Display</h3></Grid>\n                        )\n                    }\n                </Grid>\n            </Grid>\n\n        )\n    };\n}\n\nexport default Home;","import React, { useState, useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errors: {\n    fontWeight: \"bolder\",\n    color: \"red\"\n  }\n}));\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nfunction SignUp(props) {\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const defaultFormErrors = {\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    duplicate: \"\"\n  };\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    const newFieldValues = { ...formValues, [name]: value };\n    setFormValues(newFieldValues);\n\n    const newFormErrors = { ...formErrors };\n\n    switch (name) {\n      case \"username\":\n        newFormErrors.username =\n          value.length < 3 ? \"minimum of 3 characters required\" : \"\";\n        break;\n      case \"password\":\n        newFormErrors.password =\n          value.length < 6 ? \"minimum of 6 characters required\" : \"\";\n        break;\n      case \"confirmPassword\":\n        newFormErrors.confirmPassword =\n          formValues.password !== value ? \"Must match Password\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const user = useContext(UserContext);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const { username, password, confirmPassword } = formValues;\n    if (formValid(formErrors)) {\n      if (username && password === confirmPassword) {\n        const data = {\n          username: username,\n          password: password\n        };\n        API.signup(data)\n          .then(() => {\n            Auth.logIn(username, password, response => {\n              user.setUser(response);\n              props.history.push(\"/\");\n            });\n          })\n          .catch(err => {\n            console.log(err.response.data.error);\n            setFormErrors({\n              ...defaultFormErrors,\n              duplicate: \"Username is taken. Please try again.\"\n            });\n          });\n      }\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                noValidate\n                autoFocus\n                value={formValues.username}\n                onChange={changeHandler}\n              />\n              {formErrors.username.length > 0 && (\n                <span className={classes.errors}>{formErrors.username}</span>\n              )}\n              {formErrors.duplicate.length > 0 && (\n                <span className={classes.errors}>{formErrors.duplicate}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                noValidate\n                autoComplete=\"current-password\"\n                value={formValues.password}\n                onChange={changeHandler}\n              />\n              {formErrors.password.length > 0 && (\n                <span className={classes.errors}>{formErrors.password}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                noValidate\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={formValues.confirmPassword}\n                onChange={changeHandler}\n              />\n              {formErrors.confirmPassword.length > 0 && (\n                <span className={classes.errors}>\n                  {formErrors.confirmPassword}\n                </span>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Sign Up\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {\"Already have an account? Log In\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction SignUpPage() {\n  return <SignUpForm />;\n}\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        Auth.isLoggedIn() ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )\n    )} />\n);\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n    margin: 10,\n    [theme.breakpoints.down('xs')]: {\n      display: \"none\",\n    },\n    float: 'left'\n  },\n  avatar: {\n    margin: 10,\n    float: 'left'\n  },\n\n  link: {\n    color: 'white',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: \".75rem\",\n    },\n    textDecoration: \"none\"\n  },\n\n  appitems: {\n    [theme.breakpoints.down('xs')]: {\n      margin: \"0 auto\",\n    },\n  }\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  return (\n\n    <AppBar position=\"static\">\n      <Toolbar className={classes.appitems}>\n        {props.loggedIn ? <>\n          <Avatar\n            variant=\"square\"\n            src=\"../logo192.png\"\n            className={classes.avatar}\n          />\n          <Typography variant=\"h4\" className={classes.title}>\n            Fermention\n          </Typography> <Button>\n            <Link color=\"inherit\" to=\"/home\" className={classes.link}>\n              Home\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/newbrew\" className={classes.link}>\n              New Brew\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/profile\" className={classes.link}>Profile</Link>\n          </Button></>\n          :\n          <div style={{ margin: '0 auto' }}>\n            <Avatar\n              variant=\"square\"\n              src=\"../logo192.png\"\n              className={classes.avatar}\n            />\n            <Typography variant=\"h4\" className={classes.title}>\n              Fermention\n          </Typography></div>}\n      </Toolbar>\n    </AppBar>\n\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Profile from \"./pages/Profile\"\nimport Login from \"./pages/Login\"\nimport NewBrew from \"./pages/NewBrew\";\nimport Home from \"./pages/Home\";\nimport SignUp from \"./pages/SignUp\";\nimport { Container } from \"@material-ui/core\";\nimport UserContext from \"./context/UserContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport API from \"./utils/API\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport NavBar from \"./components/NavBar\";\nimport Auth from \"./utils/Auth\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#55370f',\n    },\n\n  },\n});\n\nclass App extends Component {\n  state = {\n    user: null\n  }\n\n  setUser = user => {\n    this.setState({ user: user })\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      API.getUser()\n        .then(response => {\n          this.setUser(response.data)\n        })\n    }\n  }\n\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    let loggedIn = Auth.isLoggedIn();\n    return (\n      <>\n        <ThemeProvider theme={theme}>\n          <Container>\n            <Router>\n              <NavBar loggedIn={loggedIn} />\n              <UserContext.Provider\n                value={{\n                  user: user,\n                  setUser: setUser\n                }}\n              >\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <ProtectedRoute exact path=\"/home\" component={Home} />\n                <ProtectedRoute exact path=\"/newbrew\" component={NewBrew} />\n                <ProtectedRoute exact path=\"/profile\" component={Profile} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n              </UserContext.Provider>\n            </Router>\n          </Container>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}