{"version":3,"sources":["utils/API.js","context/UserContext.js","components/NewBrewForm/index.js","pages/NewBrew.js","components/Timer/index.js","components/Card/index.js","pages/Home.js","utils/Auth.js","components/LogInForm.js","pages/Login.js","components/SignUpForm.js","pages/SignUp.js","components/NavBar/index.js","components/ProtectedRoute.js","App.js","index.js"],"names":["signup","input","axios","post","authenticate","get","getUser","headers","Authorization","localStorage","getItem","createRecipe","recipe","getAllRecipes","createContext","NewBrewForm","state","title","category","description","ingredients","startTime","Date","endTime","days","hours","mins","picture","ingredient","amount","units","loading","componentDidMount","console","log","user","handleInputChange","event","target","name","value","type","setState","parseInt","handleDateChange","date","deleteIngredient","filteredArr","filter","obj","calcEndDate","setMinutes","getMinutes","setHours","getHours","setDate","getDate","calcBrewLength","addIngredient","preventDefault","unique","i","length","toLowerCase","newIng","imageUpload","a","async","files","data","FormData","append","fetch","method","body","res","json","file","secure_url","handleSubmit","context","username","brewLength","API","then","result","catch","err","fileInput","Container","maxWidth","FormControl","fullWidth","Input","this","onChange","FormHelperText","NativeSelect","className","map","item","key","id","onClick","min","placeholder","TextField","multiline","utils","DateFnsUtils","margin","variant","format","max","ref","src","alt","style","width","Button","size","color","Component","contextType","UserContext","NewBrew","Timer","props","brewDate","timer","timerID","setInterval","tick","clearInterval","msecs","Math","floor","secs","t","timetoBrew","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","marginBottom","Card","classes","Grid","xs","sm","Paper","elevation","container","direction","Typography","Home","database","recipes","search","brewStatus","filterFeed","loadRecipes","filteredrecipes","isMatch","categoryFilter","ingredientFilter","statusFilter","searchTerm","justify","InputLabel","status","_id","Auth","isLoggedIn","logIn","password","cb","response","setItem","token","logOut","removeItem","getToken","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","withRouter","useState","fieldValues","setFieldValues","useContext","changeHandler","e","newFieldValues","submitHandler","setUser","history","push","component","CssBaseline","Avatar","onSubmit","noValidate","required","label","autoComplete","autoFocus","Link","href","Login","errors","fontWeight","formValid","formErrors","valid","Object","values","forEach","val","confirmPassword","formValues","setFormValues","setFormErrors","newFormErrors","alert","SignUpPage","SignUpForm","marginRight","NavBar","AppBar","position","Toolbar","to","ProtectedRoute","rest","render","App","Provider","exact","path","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23dfeb3e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n\n    signup: function (input) {\n        return axios.post(\"/api/signup\", input);\n    },\n\n    //probably need to send username or password with request?\n    authenticate: function (input) {\n        return axios.get(\"/api/authenticate\", input);\n    },\n\n    getUser: function () {\n        return axios.get(\"/api/me\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n    },\n\n    createRecipe: function (recipe) {\n        return axios.post(\"/api/recipes\", recipe);\n    },\n\n    getAllRecipes: function () {\n        return axios.get(\"/api/recipes\");\n    }\n};","import { createContext } from \"react\";\n\nexport default createContext();","import 'date-fns';\nimport React, { Component } from \"react\";\nimport { Button, TextField, Container, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport API from \"../../utils/API\"\nimport \"./style.css\";\nimport UserContext from '../../context/UserContext';\n\nclass NewBrewForm extends Component {\n    static contextType = UserContext;\n\n    //Sets state\n    state = {\n        title: \"\",\n        category: \"Other\",\n        description: \"\",\n        ingredients: [],\n        startTime: new Date(),\n        endTime: new Date(),\n        days: 0,\n        hours: 0,\n        mins: 0,\n        picture: \"\",\n        ingredient: \"\",\n        amount: 1,\n        units: \"mL\",\n        loading: false\n    }\n    componentDidMount = () => {\n        console.log(this.state.user)\n    }\n    //Handles changes in input\n    handleInputChange = event => {\n        const { name, value, type } = event.target;\n\n        this.setState({\n            [name]: type === 'number' ? parseInt(value) : value\n        });\n\n    };\n\n    //Handles changes in date\n    handleDateChange = date => {\n        this.setState({\n            startTime: date\n        });\n    };\n\n    //Deletes specific ingredient\n    deleteIngredient = name => {\n        let filteredArr = this.state.ingredients.filter(function (obj) {\n            return obj.ingredient !== name;\n        });\n\n        this.setState({\n            ingredients: filteredArr\n        });\n    };\n\n    //Adds time from brew lenght to create end time\n    calcEndDate = (days, hours, mins) => {\n        let endTime = new Date();\n        let startTime = this.state.startTime;\n        endTime.setMinutes(startTime.getMinutes() + mins);\n        endTime.setHours(endTime.getHours() + hours);\n        endTime.setDate(endTime.getDate() + days);\n        return endTime;\n    }\n\n    //Formats brew length\n    calcBrewLength = (days, hours, mins) => {\n        if (hours < 10) {\n            hours = \"0\" + hours;\n        }\n        if (mins < 10) {\n            mins = \"0\" + mins;\n        }\n        let brewLength = `${days}:${hours}:${mins}:00`\n        return brewLength;\n    }\n\n    //Adds new ingredient\n    addIngredient = event => {\n        event.preventDefault();\n        let ingredients = this.state.ingredients;\n        let unique = true;\n\n        for (let i = 0; i < ingredients.length; i++) {\n            if (this.state.ingredient.toLowerCase() === ingredients[i].ingredient.toLowerCase()) {\n                unique = false;\n            }\n        }\n\n        if (this.state.ingredient && unique) {\n            let newIng = {\n                ingredient: this.state.ingredient,\n                amount: this.state.amount,\n                units: this.state.units\n            }\n            this.setState({\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\",\n                ingredients: [...ingredients, newIng]\n            });\n        }\n    }\n\n    //image uploading\n    imageUpload = async event => {\n        const files = event.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'fermention');\n        this.setState({ loading: true });\n        const res = await fetch(\n            'https://api.cloudinary.com/v1_1/dyiisb9c8/image/upload',\n            {\n                method: 'POST',\n                body: data\n            }\n        )\n        const file = await res.json();\n\n        this.setState({\n            picture: file.secure_url,\n            loading: false\n        });\n\n\n\n    }\n\n    //Creates new brew\n    handleSubmit = event => {\n        event.preventDefault();\n        const data = {\n            user: this.context.user.username,\n            title: this.state.title,\n            category: this.state.category,\n            ingredients: this.state.ingredients,\n            description: this.state.description,\n            startTime: this.state.startTime,\n            endTime: this.calcEndDate(this.state.days, this.state.hours, this.state.mins),\n            brewLength: this.calcBrewLength(this.state.days, this.state.hours, this.state.mins),\n            picture: this.state.picture\n        }\n\n        //Only uploads to database if title exists\n        if (this.state.title !== \"\") {\n            // console.log(data)\n\n            //Runs API function\n            API.createRecipe(data)\n                .then(result => {\n                    // console.log(result)\n                })\n                .catch(err => console.log(err))\n\n            //Resets state\n            this.setState({\n                title: \"\",\n                category: \"Other\",\n                description: \"\",\n                ingredients: [],\n                startTime: new Date(),\n                endTime: new Date(),\n                days: 0,\n                hours: 0,\n                mins: 0,\n                picture: \"\",\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\"\n            });\n\n            //Resets file input\n            this.fileInput.value = \"\";\n\n        }\n\n    };\n\n    //Renders form\n    render() {\n        // console.log(this.context.user);\n        return (\n            <>\n                <Container maxWidth=\"sm\">\n                    <FormControl\n                        fullWidth={true}>\n                        <h6 >Title:</h6>\n                        <Input\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={this.handleInputChange} />\n                        <FormHelperText >Required</FormHelperText>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Category:</h6>\n                        <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                            <option value={\"Other\"}>Other</option>\n                            <option value={\"Beer\"}>Beer</option>\n                            <option value={\"Vinegar\"}>Vinegar</option>\n                            <option value={\"Bread\"}>Bread</option>\n                            <option value={\"Pickle\"}>Pickle</option>\n                            <option value={\"Kombucha\"}>Kombucha</option>\n                            <option value={\"Miso\"}>Miso</option>\n                            <option value={\"Wine\"}>Wine</option>\n                            <option value={\"Kimchi\"}>Kimchi</option>\n                        </NativeSelect>\n                    </FormControl>\n                    <FormControl fullWidth={true}>\n                        <h6>Ingredients:</h6>\n                        <ul className=\"ingList\">\n                            {this.state.ingredients.map(item => (\n                                <li className=\"ingListItem\" key={item.ingredient}>\n                                    {item.ingredient}: {item.amount}{item.units}\n                                    <button id=\"ingBtn\" onClick={() => this.deleteIngredient(item.ingredient)}>&times;</button>\n                                </li>\n                            ))}\n                        </ul>\n                        <div>\n                            <h5 className=\"subLabel\">Name:</h5>\n                            <input\n                                value={this.state.ingredient}\n                                id=\"ingName\"\n                                className=\"subInput\"\n                                name=\"ingredient\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Amount:</h5>\n                            <input\n                                value={this.state.amount}\n                                id=\"ingAmount\"\n                                className=\"subInput\"\n                                type=\"number\"\n                                min={1}\n                                placeholder={1}\n                                name=\"amount\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Unit:</h5>\n                            <NativeSelect\n                                value={this.state.units}\n                                className=\"subInput\"\n                                id=\"ingUnit\"\n                                name=\"units\"\n                                onChange={this.handleInputChange}>\n                                <option value={\"mL\"}>mL</option>\n                                <option value={\"L\"}>L</option>\n                                <option value={\"mg\"}>mg</option>\n                                <option value={\"g\"}>g</option>\n                                <option value={\"kg\"}>kg</option>\n                            </NativeSelect>\n                            <br></br>\n                            <button id=\"ingBtn\" onClick={this.addIngredient}>+</button>\n                        </div>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Description:</h6>\n                        <TextField\n                            multiline\n                            value={this.state.description}\n                            onChange={this.handleInputChange}\n                            name=\"description\"\n                        />\n                    </FormControl>\n\n\n                    <FormControl>\n                        <h6>Start Time:</h6>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                            <KeyboardTimePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormControl>\n\n                    <FormControl fullWidth={true}>\n                        <h6>Brew Time:</h6>\n                        <div>\n                            <h5 className=\"subLabel\">Days:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"days\"\n                                type=\"number\"\n                                min={0}\n                                name=\"days\"\n                                onChange={this.handleInputChange}\n                                placeholder={0}\n                                value={this.state.days}>\n                            </input>\n\n                            <br></br>\n                            <h5 className=\"subLabel\">Hours:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={23}\n                                name=\"hours\"\n                                value={this.state.hours}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Minutes:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={59}\n                                name=\"mins\"\n                                value={this.state.mins}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                        </div>\n                    </FormControl>\n\n                    <FormControl>\n                        <h6>Image:</h6>\n                        <input type=\"file\"\n                            name=\"file\"\n                            onChange={this.imageUpload}\n                            ref={ref => this.fileInput = ref}\n                        ></input>\n                        {this.state.picture ? (\n                            <img src={this.state.picture} alt=\"Uploaded Brew\" style={{ width: '200px' }}></img>\n                        ) : (\n                                <p>No image uploaded.</p>\n                            )}\n\n                    </FormControl>\n\n                    <div id=\"wrapper\">\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            id=\"createBtn\"\n                            onClick={this.handleSubmit}>\n                            Create New Brew</Button>\n                    </div>\n\n\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default NewBrewForm;\n","import React from \"react\";\nimport NewBrewForm from \"../components/NewBrewForm\";\n\nfunction NewBrew() {\n    return (\n        <NewBrewForm />\n    );\n}\n\nexport default NewBrew;","import React, { Component } from \"react\";\n\nclass Timer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            brewDate: new Date(this.props.endTime),\n            date: new Date(),\n            timer: \"00:00:00:00\"\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    timetoBrew(msecs) {\n        if (msecs <= 0) {\n            return \"FINISHED!\";\n        } else {\n            let days = Math.floor(msecs / (24 * 60 * 60 * 1000));\n            msecs = msecs % (24 * 60 * 60 * 1000);\n            let hours = Math.floor(msecs / (60 * 60 * 1000));\n            if (hours < 10) { hours = \"0\" + hours };\n            msecs = msecs % (60 * 60 * 1000);\n            let mins = Math.floor(msecs / (60 * 1000));\n            if (mins < 10) { mins = \"0\" + mins };\n            msecs = msecs % (60 * 1000);\n            let secs = Math.floor(msecs / 1000);\n            if (secs < 10) { secs = \"0\" + secs };\n            let timerStr = `${days}:${hours}:${mins}:${secs}`;\n            return timerStr;\n        }\n    }\n\n    tick() {\n        let t = this.state.brewDate - this.state.date;\n        this.setState({\n            date: new Date(),\n            timer: this.timetoBrew(t)\n        });\n    }\n\n    render() {\n        return (\n            <>{this.state.timer}</>\n        );\n    }\n}\n\nexport default Timer;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"../Timer\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst Card = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} sm={8} key={props.id}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Typography variant=\"h5\">{props.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h5\">&nbsp;by {props.user ? props.user : \"Anonymous User\"}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <img src={props.picture !== \"\" ? props.picture : \"./images/fermention-default.jpg\"} style={{ width: '200px' }} alt=\"User Brew\" />\n          </Grid>\n          <Grid item>\n            <Typography variant=\"body1\">\n              Ingredients:</Typography>{props.ingredients.length > 0 ? (props.ingredients.map(ingredient => (\n                <p key={ingredient.ingredient}>\n                  {ingredient.ingredient}&nbsp;{ingredient.amount}{ingredient.units}\n                </p>\n              ))) : (\"(None Listed)\")}\n\n            <Typography variant=\"body1\">\n              Description: {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Typography variant=\"body1\">Total Brew Time: {props.brewLength}</Typography>\n          </Grid>\n          <Grid container direction=\"row\">\n            <Grid item>\n              <Typography variant=\"body1\">Brewing Status: <Timer endTime={props.endTime}></Timer></Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\"\nimport Card from \"../components/Card\"\nimport { Grid, InputLabel, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\n\n\nclass Home extends Component {\n    state = {\n        database: [],\n        recipes: [],\n        category: \"All\",\n        search: \"\",\n        brewStatus: \"All\"\n    }\n\n    componentDidMount() {\n        this.loadRecipes();\n    }\n\n    filterFeed() {\n        const filteredrecipes = this.state.database.filter(recipe => {\n            let isMatch = true;\n            if (this.state.category !== \"All\") {\n                isMatch = isMatch && this.categoryFilter(recipe);\n            }\n\n            if (this.state.search) {\n                isMatch = isMatch && this.ingredientFilter(recipe);\n            }\n\n            if (this.state.brewStatus !== \"All\") {\n                isMatch = isMatch && this.statusFilter(recipe);\n            }\n            return isMatch;\n        });\n        this.setState({ recipes: filteredrecipes });\n    }\n\n    //Filters by chosen category\n    categoryFilter(recipe) {\n        return recipe.category === this.state.category;\n    }\n\n    //Filters by brew status\n    statusFilter(recipe) {\n        if (this.state.brewStatus === \"Finished\") {\n            return new Date(recipe.endTime) < new Date();\n        } else if (this.state.brewStatus === \"Brewing\") {\n            return new Date(recipe.endTime) > new Date();\n        }\n    }\n\n    //Searches array for ingredients\n    ingredientFilter(recipe) {\n        const searchTerm = this.state.search;\n        if (recipe.ingredients.length !== 0) {\n            for (let i = 0; i < recipe.ingredients.length; i++) {\n                if (recipe.ingredients[i].ingredient.toLowerCase() === searchTerm.toLowerCase()) {\n                    return recipe.ingredients[i].ingredient.toLowerCase() === searchTerm.toLowerCase()\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.filterFeed();\n        });\n    };\n\n    loadRecipes = () => {\n        API.getAllRecipes()\n            .then(res =>\n                this.setState({\n                    database: res.data,\n                    recipes: res.data\n                }))\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\">\n                <Grid item xs={12} sm={8}>\n                    <FormControl\n                        fullWidth={true}>\n                        <InputLabel>Search Ingredients</InputLabel>\n                        <Input\n                            value={this.state.search}\n                            name=\"search\"\n                            onChange={this.handleInputChange} />\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl\n                        fullWidth={true}>\n                        <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                            <option value={\"All\"}>All</option>\n                            <option value={\"Beer\"}>Beer</option>\n                            <option value={\"Vinegar\"}>Vinegar</option>\n                            <option value={\"Bread\"}>Bread</option>\n                            <option value={\"Pickle\"}>Pickle</option>\n                            <option value={\"Kombucha\"}>Kombucha</option>\n                            <option value={\"Miso\"}>Miso</option>\n                            <option value={\"Wine\"}>Wine</option>\n                            <option value={\"Kimchi\"}>Kimchi</option>\n                            <option value={\"Other\"}>Other</option>\n                        </NativeSelect>\n                        <FormHelperText>Filter by Category</FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <FormControl\n                        fullWidth={true}>\n                        <NativeSelect value={this.state.status} name=\"brewStatus\" onChange={this.handleInputChange}>\n                            <option value={\"All\"}>All</option>\n                            <option value={\"Finished\"}>Finished</option>\n                            <option value={\"Brewing\"}>Currently Brewing</option>\n\n                        </NativeSelect>\n                        <FormHelperText>Filter by Brewing Status</FormHelperText>\n                    </FormControl>\n                </Grid>\n                {this.state.recipes.length > 0 ? (\n                    <>\n                        {this.state.recipes.map(recipe => (\n\n\n                            <Card key={recipe._id}\n                                id={recipe._id}\n                                title={recipe.title}\n                                description={recipe.description}\n                                user={recipe.user}\n                                picture={recipe.picture}\n                                ingredients={recipe.ingredients}\n                                endTime={recipe.endTime}\n                                brewLength={recipe.brewLength}></Card>\n\n                        ))}\n                    </>\n                ) : (\n                        <Grid item xs={12} sm={8} ><h3>No Results to Display</h3></Grid>\n                    )\n                }\n            </Grid>\n        )\n    };\n}\n\nexport default Home;","import axios from \"axios\";\n\nfunction Auth() {\n\n  function logIn(username, password, cb) {\n    axios.post(\"/api/authenticate\", { username: username, password: password })\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken\n  }\n}\n\nexport default Auth();\n","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LogIn(props) {\n    const [fieldValues, setFieldValues] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const user = useContext(UserContext);\n\n    const changeHandler = (e) => {\n        const { name, value } = e.target;\n        const newFieldValues = { ...fieldValues, [name]: value };\n        setFieldValues(newFieldValues);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const { username, password } = fieldValues;\n        if (username && password) {\n            Auth.logIn(username, password, (response) => {\n                user.setUser(response);\n                props.history.push(\"/\");\n            }).catch(err => { console.log(err) });\n        }\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form className={classes.form} onSubmit={submitHandler} noValidate>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                value={fieldValues.username}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={fieldValues.password}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={submitHandler}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default withRouter(LogIn);","import React from \"react\";\nimport LoginForm from \"../components/LogInForm\";\n\nfunction Login() {\n    return (\n        <LoginForm />\n    );\n}\n\nexport default Login;","import React, { useState, useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\nimport { de } from \"date-fns/locale\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errors: {\n    fontWeight: \"bolder\",\n    color: \"red\"\n  }\n}));\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nfunction SignUp(props) {\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const [formErrors, setFormErrors] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    const newFieldValues = { ...formValues, [name]: value };\n    setFormValues(newFieldValues);\n\n    const newFormErrors = { ...formErrors };\n\n    switch (name) {\n      case \"username\":\n        newFormErrors.username =\n          value.length < 3 ? \"minimum of 3 characters required\" : \"\";\n        break;\n      case \"password\":\n        newFormErrors.password =\n          value.length < 6 ? \"minimum of 6 characters required\" : \"\";\n        break;\n      case \"confirmPassword\":\n        newFormErrors.confirmPassword =\n          formValues.password !== value ? \"Must match Password\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const user = useContext(UserContext);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const { username, password, confirmPassword } = formValues;\n    if (formValid(formErrors)) {\n      if (username && password === confirmPassword) {\n        const data = {\n          username: username,\n          password: password\n        };\n        API.signup(data, response => {\n\n        }).then(\n          Auth.logIn(username, password, response => {\n            user.setUser(response);\n            props.history.push(\"/\");\n          })\n        );\n      }\n    } else {\n      alert(\"There was an error. Please try again.\");\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                noValidate\n                autoFocus\n                value={formValues.username}\n                onChange={changeHandler}\n              />\n              {formErrors.username.length > 0 && (\n                <span className={classes.errors}>{formErrors.username}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                noValidate\n                autoComplete=\"current-password\"\n                value={formValues.password}\n                onChange={changeHandler}\n              />\n              {formErrors.password.length > 0 && (\n                <span className={classes.errors}>{formErrors.password}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                noValidate\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={formValues.confirmPassword}\n                onChange={changeHandler}\n              />\n              {formErrors.confirmPassword.length > 0 && (\n                <span className={classes.errors}>\n                  {formErrors.confirmPassword}\n                </span>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Sign Up\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {\"Already have an account? Log In\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction SignUpPage() {\n  return <SignUpForm />;\n}\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\n// import Link from \"@material-ui/core/Link\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n    margin: 10\n  },\n  avatar: {\n    marginRight: 15\n  }\n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Avatar\n            variant=\"square\"\n            src=\"../logo192.png\"\n            className={classes.avatar}\n          />\n          <Typography variant=\"h4\" className={classes.title}>\n            Fermention\n          </Typography>\n          <Button>\n            <Link color=\"inherit\" to=\"/home\">\n              Home\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/newbrew\">\n              New Brew\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/login\">Log In</Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        Auth.isLoggedIn() ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )\n    )} />\n);\n\nexport default ProtectedRoute;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport NewBrew from \"./pages/NewBrew\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport NavBar from \"./components/NavBar\";\nimport { Container } from \"@material-ui/core\";\nimport UserContext from \"./context/UserContext\"\nimport ProtectedRoute from \"./components/ProtectedRoute\"\nimport API from \"./utils/API\"\n\nclass App extends Component {\n  state = {\n    user: null\n  }\n\n  setUser = user => {\n    this.setState({ user: user })\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      console.log(token)\n      API.getUser()\n        .then(response => {\n          console.log(response)\n          this.setUser(response.data)\n        })\n    }\n  }\n\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser\n    return (\n      <>\n        <Container>\n          <Router>\n            <UserContext.Provider\n              value={{\n                user: user,\n                setUser: setUser\n              }}\n            >\n              <NavBar />\n              <ProtectedRoute exact path=\"/\" component={Home} />\n              <ProtectedRoute exact path=\"/home\" component={Home} />\n              <ProtectedRoute exact path=\"/newbrew\" component={NewBrew} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={SignUp} />\n            </UserContext.Provider>\n          </Router>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}