{"version":3,"sources":["utils/API.js","components/Timer/index.js","components/Card/index.js","context/UserContext.js","utils/Auth.js","components/ProfileBio/index.js","pages/Profile.js","components/LogInForm.js","pages/Login.js","components/NewBrewForm/index.js","pages/NewBrew.js","pages/Home.js","components/SignUpForm.js","pages/SignUp.js","components/ProtectedRoute.js","components/NavBar/index.js","App.js","index.js"],"names":["signup","input","axios","post","authenticate","getUser","get","headers","Authorization","localStorage","getItem","createRecipe","recipe","deleteRecipe","id","delete","getUserRecipes","user","getAllRecipes","Timer","props","state","brewDate","Date","endTime","date","timer","this","timerID","setInterval","tick","clearInterval","msecs","days","Math","floor","hours","mins","secs","t","setState","timetoBrew","Component","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","marginBottom","marginTop","image","margin","marginLeft","float","Card","classes","Grid","container","item","xs","key","Paper","className","variant","elevation","Typography","title","onClick","setUser","sm","src","picture","style","width","alt","category","ingredients","length","map","ingredient","amount","units","description","brewLength","createContext","Auth","isLoggedIn","logIn","username","password","cb","then","response","setItem","data","token","logOut","removeItem","getToken","ProfileBio","history","useHistory","Button","Link","color","push","to","link","Profile","database","recipes","search","brewStatus","handleInputChange","event","target","name","value","filterFeed","loadRecipes","API","res","filteredrecipes","filter","isMatch","categoryFilter","ingredientFilter","statusFilter","searchTerm","i","toLowerCase","includes","justify","FormControl","fullWidth","InputLabel","Input","onChange","NativeSelect","FormHelperText","status","_id","contextType","UserContext","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","withRouter","useState","fieldValues","setFieldValues","useContext","changeHandler","e","newFieldValues","submitHandler","preventDefault","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","noValidate","TextField","required","label","autoComplete","autoFocus","type","href","Login","NewBrewForm","startTime","loading","parseInt","handleDateChange","deleteIngredient","filteredArr","obj","calcEndDate","setMinutes","getMinutes","setHours","getHours","setDate","getDate","calcBrewLength","addIngredient","unique","newIng","imageUpload","a","async","files","FormData","append","fetch","method","body","json","file","secure_url","handleSubmit","context","result","catch","err","console","log","fileInput","min","placeholder","multiline","utils","DateFnsUtils","format","max","ref","size","NewBrew","Home","userFilter","errors","fontWeight","formValid","formErrors","valid","Object","values","forEach","val","confirmPassword","formValues","setFormValues","defaultFormErrors","duplicate","setFormErrors","newFormErrors","error","SignUpPage","SignUpForm","ProtectedRoute","rest","render","breakpoints","down","fontSize","appitems","NavBar","AppBar","position","Toolbar","loggedIn","createMuiTheme","primary","App","ThemeProvider","Provider","exact","path","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.145814c5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    signup: function (input) {\n        return axios.post(\"/api/signup\", input);\n    },\n\n    //probably need to send username or password with request?\n    authenticate: function (input) {\n        return axios.post(\"/api/authenticate\", input);\n    },\n\n    getUser: function () {\n        return axios.get(\"/api/me\", {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n    },\n\n    createRecipe: function (recipe) {\n        return axios.post(\"/api/recipes\", recipe);\n    },\n\n    deleteRecipe: function (id) {\n        return axios.delete(\"/api/recipes\" + id)\n    },\n\n    getUserRecipes: function (user) {\n        return axios.get(\"/api/recipes/\" + user)\n    },\n\n    getAllRecipes: function () {\n        return axios.get(\"/api/recipes\");\n    }\n};\n","import React, { Component } from \"react\";\n\nclass Timer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            brewDate: new Date(this.props.endTime),\n            date: new Date(),\n            timer: \"00:00:00:00\"\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    timetoBrew(msecs) {\n        if (msecs <= 0) {\n            return \"FINISHED!\";\n        } else {\n            let days = Math.floor(msecs / (24 * 60 * 60 * 1000));\n            msecs = msecs % (24 * 60 * 60 * 1000);\n            let hours = Math.floor(msecs / (60 * 60 * 1000));\n\n            msecs = msecs % (60 * 60 * 1000);\n            let mins = Math.floor(msecs / (60 * 1000));\n\n            msecs = msecs % (60 * 1000);\n            let secs = Math.floor(msecs / 1000);\n\n            let timerStr = `${days} days ${hours} hours ${mins} minutes ${secs} seconds`;\n            return timerStr;\n        }\n    }\n\n    tick() {\n        let t = this.state.brewDate - this.state.date;\n        this.setState({\n            date: new Date(),\n            timer: this.timetoBrew(t)\n        });\n    }\n\n    render() {\n        return (\n            <>{this.state.timer}</>\n        );\n    }\n}\n\nexport default Timer;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"../Timer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: 'left'\n  },\n\n}));\n\nconst Card = props => {\n  const classes = useStyles();\n\n\n  return (\n    <Grid container item xs={12} key={props.id} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n\n        <Grid container item xs={12} spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{props.title} by <span onClick={() => props.setUser(props.user)} id=\"username\">{props.user ? props.user : \"Anonymous User\"}</span> </Typography>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <img\n              className={classes.image}\n              src={\n                props.picture !== \"\"\n                  ? props.picture\n                  : \"./images/fermention-default.jpg\"\n              }\n              style={{ width: \"100%\" }}\n              alt=\"User Brew\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n\n            <Typography variant=\"body1\">\n              <b>Category:&nbsp;</b>\n              {props.category}\n            </Typography>\n\n            <Typography variant=\"body1\"><b>Ingredients:</b> </Typography>\n            <ul>{props.ingredients.length > 0\n              ? props.ingredients.map(ingredient => (\n                <li key={ingredient.ingredient}>\n                  {ingredient.ingredient}&nbsp;{ingredient.amount}\n                  {ingredient.units}\n                </li>\n              ))\n              : <p>(None Listed)</p>}</ul>\n\n            <Typography variant=\"body1\">\n              <b>Description:&nbsp;</b>\n              {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Total Brew Time:</b> {props.brewLength}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Brewing Status:</b> <Timer endTime={props.endTime}></Timer>\n            </Typography>\n          </Grid>\n        </Grid>\n\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Card;\n","import { createContext } from \"react\";\n\nexport default createContext();","import axios from \"axios\";\n\nfunction Auth() {\n\n  function logIn(username, password, cb) {\n    axios.post(\"/api/authenticate\", { username: username, password: password })\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken\n  }\n}\n\nexport default Auth();\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper, Link, Button } from \"@material-ui/core\";\nimport Auth from \"../../utils/Auth\"\nimport { useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: 'left'\n  },\n\n}));\n\nconst ProfileBio = props => {\n  const classes = useStyles();\n  let history = useHistory();\n  return (\n    <Grid container item xs={12} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n\n        <Grid container item xs={12} spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{props.user ? props.user : \"Anonymous User\"}'s Ferments</Typography>\n            <Button>\n              <Link color=\"inherit\" onClick={() => {\n                Auth\n                  .logOut(() => { history.push('/') })\n              }}\n                to='/'\n                className={classes.link}>Logout</Link>\n            </Button>\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n            <Typography variant=\"body1\">\n              <b>Bio:&nbsp;</b>\n              {props.description ? props.description : \"No Bio\"}\n            </Typography>\n          </Grid> */}\n        </Grid>\n\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default ProfileBio;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport { Grid, InputLabel, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\nimport UserContext from \"../context/UserContext\"\nimport ProfileBio from \"../components/ProfileBio/index\"\n\nclass Profile extends Component {\n    state = {\n        user: \"\",\n        database: [],\n        recipes: [],\n        category: \"All\",\n        search: \"\",\n        brewStatus: \"All\"\n    }\n\n    componentDidMount() {\n        const token = localStorage.getItem(\"token\")\n        if (token) {\n            API.getUser()\n                .then(response => {\n                    this.setUser(response.data)\n                    this.loadRecipes()\n                })\n        }\n    }\n\n    setUser = user => {\n        this.setState({ user: user })\n    }\n\n    filterFeed() {\n        const filteredrecipes = this.state.database.filter(recipe => {\n            let isMatch = true;\n            if (this.state.category !== \"All\") {\n                isMatch = isMatch && this.categoryFilter(recipe);\n            }\n\n            if (this.state.search) {\n                isMatch = isMatch && this.ingredientFilter(recipe);\n            }\n\n            if (this.state.brewStatus !== \"All\") {\n                isMatch = isMatch && this.statusFilter(recipe);\n            }\n            return isMatch;\n        });\n        this.setState({ recipes: filteredrecipes });\n    }\n\n    //Filters by chosen category\n    categoryFilter(recipe) {\n        return recipe.category === this.state.category;\n    }\n\n    //Filters by brew status\n    statusFilter(recipe) {\n        if (this.state.brewStatus === \"Finished\") {\n            return new Date(recipe.endTime) < new Date();\n        } else if (this.state.brewStatus === \"Brewing\") {\n            return new Date(recipe.endTime) > new Date();\n        }\n    }\n\n    //Searches array for ingredients\n    ingredientFilter(recipe) {\n        const searchTerm = this.state.search;\n        if (recipe.ingredients.length !== 0) {\n            for (let i = 0; i < recipe.ingredients.length; i++) {\n                if (recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase())) {\n                    return recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase());\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.filterFeed();\n        });\n    };\n\n    loadRecipes = () => {\n        API.getUserRecipes(this.state.user.username)\n            .then(res => {\n                this.setState({\n                    database: res.data,\n                    recipes: res.data\n                })\n            })\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={6}>\n\n                <Grid container item justify=\"center\" xs={12} sm={8}>\n                    <ProfileBio user={this.state.user.username}/>\n                </Grid>\n\n                <Grid item xs={12} sm={8} >\n                    <FormControl\n                        fullWidth={true}>\n                        <InputLabel>Search Ingredients</InputLabel>\n                        <Input\n                            value={this.state.search}\n                            name=\"search\"\n                            onChange={this.handleInputChange} />\n                    </FormControl>\n                </Grid>\n\n                <Grid container item justify=\"center\" spacing={6} xs={12} sm={8} >\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Beer\"}>Beer</option>\n                                <option value={\"Vinegar\"}>Vinegar</option>\n                                <option value={\"Bread\"}>Bread</option>\n                                <option value={\"Pickle\"}>Pickle</option>\n                                <option value={\"Kombucha\"}>Kombucha</option>\n                                <option value={\"Miso\"}>Miso</option>\n                                <option value={\"Wine\"}>Wine</option>\n                                <option value={\"Kimchi\"}>Kimchi</option>\n                                <option value={\"Other\"}>Other</option>\n                            </NativeSelect>\n                            <FormHelperText>Filter by Category</FormHelperText>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.status} name=\"brewStatus\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Finished\"}>Finished</option>\n                                <option value={\"Brewing\"}>Currently Brewing</option>\n\n                            </NativeSelect>\n                            <FormHelperText>Filter by Brewing Status</FormHelperText>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n\n                <Grid container item justify=\"center\" xs={12} sm={8}>\n                    {this.state.recipes.length > 0 ? (\n                        <>\n                            {this.state.recipes.map(recipe => (\n\n\n\n                                <Card key={recipe._id}\n                                    id={recipe._id}\n                                    category={recipe.category}\n                                    title={recipe.title}\n                                    description={recipe.description}\n                                    user={recipe.user}\n                                    picture={recipe.picture}\n                                    ingredients={recipe.ingredients}\n                                    endTime={recipe.endTime}\n                                    brewLength={recipe.brewLength}> </Card>\n\n\n\n                            ))}\n                        </>\n                    ) : (\n                            <Grid item xs={12} sm={8} ><h3>No Results to Display</h3></Grid>\n                        )\n                    }\n                </Grid>\n            </Grid>\n\n        )\n    };\n}\n\n\nProfile.contextType = UserContext\n\nexport default Profile;","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LogIn(props) {\n    const [fieldValues, setFieldValues] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const user = useContext(UserContext);\n\n    const changeHandler = (e) => {\n        const { name, value } = e.target;\n        const newFieldValues = { ...fieldValues, [name]: value };\n        setFieldValues(newFieldValues);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const { username, password } = fieldValues;\n        if (username && password) {\n            Auth.logIn(username, password, (response) => {\n                user.setUser(response);\n                props.history.push(\"/\");\n            });\n        }\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form className={classes.form} onSubmit={submitHandler} noValidate>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                value={fieldValues.username}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={fieldValues.password}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={submitHandler}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default withRouter(LogIn);","import React from \"react\";\nimport LoginForm from \"../components/LogInForm\";\n\nfunction Login() {\n\n    return (\n        <>\n            <LoginForm /></>\n    );\n}\n\nexport default Login;","import 'date-fns';\nimport React, { Component } from \"react\";\nimport { Button, TextField, Container, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport API from \"../../utils/API\"\nimport \"./style.css\";\nimport UserContext from '../../context/UserContext';\n\nclass NewBrewForm extends Component {\n    static contextType = UserContext;\n\n    //Sets state\n    state = {\n        title: \"\",\n        category: \"Other\",\n        description: \"\",\n        ingredients: [],\n        startTime: new Date(),\n        endTime: new Date(),\n        days: 0,\n        hours: 0,\n        mins: 0,\n        picture: \"\",\n        ingredient: \"\",\n        amount: 1,\n        units: \"mL\",\n        loading: false\n    }\n\n    //Handles changes in input\n    handleInputChange = event => {\n        const { name, value, type } = event.target;\n\n        this.setState({\n            [name]: type === 'number' ? parseInt(value) : value\n        });\n\n    };\n\n    //Handles changes in date\n    handleDateChange = date => {\n        this.setState({\n            startTime: date\n        });\n    };\n\n    //Deletes specific ingredient\n    deleteIngredient = name => {\n        let filteredArr = this.state.ingredients.filter(function (obj) {\n            return obj.ingredient !== name;\n        });\n\n        this.setState({\n            ingredients: filteredArr\n        });\n    };\n\n    //Adds time from brew lenght to create end time\n    calcEndDate = (days, hours, mins) => {\n        let endTime = new Date();\n        let startTime = this.state.startTime;\n        endTime.setMinutes(startTime.getMinutes() + mins);\n        endTime.setHours(endTime.getHours() + hours);\n        endTime.setDate(endTime.getDate() + days);\n        return endTime;\n    }\n\n    //Formats brew length\n    calcBrewLength = (days, hours, mins) => {\n        let brewLength = `${days} days ${hours} hours ${mins} minutes 0 seconds`\n        return brewLength;\n    }\n\n    //Adds new ingredient\n    addIngredient = event => {\n        event.preventDefault();\n        let ingredients = this.state.ingredients;\n        let unique = true;\n\n        for (let i = 0; i < ingredients.length; i++) {\n            if (this.state.ingredient.toLowerCase() === ingredients[i].ingredient.toLowerCase()) {\n                unique = false;\n            }\n        }\n\n        if (this.state.ingredient && unique) {\n            let newIng = {\n                ingredient: this.state.ingredient,\n                amount: this.state.amount,\n                units: this.state.units\n            }\n            this.setState({\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\",\n                ingredients: [...ingredients, newIng]\n            });\n        }\n    }\n\n    //image uploading\n    imageUpload = async event => {\n        const files = event.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'fermention');\n        this.setState({ loading: true });\n        const res = await fetch(\n            'https://api.cloudinary.com/v1_1/dyiisb9c8/image/upload',\n            {\n                method: 'POST',\n                body: data\n            }\n        )\n        const file = await res.json();\n\n        this.setState({\n            picture: file.secure_url,\n            loading: false\n        });\n\n\n\n    }\n\n    //Creates new brew\n    handleSubmit = event => {\n        event.preventDefault();\n        const data = {\n            user: this.context.user.username,\n            title: this.state.title,\n            category: this.state.category,\n            ingredients: this.state.ingredients,\n            description: this.state.description,\n            startTime: this.state.startTime,\n            endTime: this.calcEndDate(this.state.days, this.state.hours, this.state.mins),\n            brewLength: this.calcBrewLength(this.state.days, this.state.hours, this.state.mins),\n            picture: this.state.picture\n        }\n\n        //Only uploads to database if title exists\n        if (this.state.title !== \"\") {\n            // console.log(data)\n\n            //Runs API function\n            API.createRecipe(data)\n                .then(result => {\n                    // console.log(result)\n                })\n                .catch(err => console.log(err))\n\n            //Resets state\n            this.setState({\n                title: \"\",\n                category: \"Other\",\n                description: \"\",\n                ingredients: [],\n                startTime: new Date(),\n                endTime: new Date(),\n                days: 0,\n                hours: 0,\n                mins: 0,\n                picture: \"\",\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\"\n            });\n\n            //Resets file input\n            this.fileInput.value = \"\";\n\n        }\n\n    };\n\n    //Renders form\n    render() {\n        // console.log(this.context.user);\n        return (\n            <>\n                <Container maxWidth=\"sm\">\n                    <FormControl\n                        fullWidth={true}>\n                        <h6 >Title:</h6>\n                        <Input\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={this.handleInputChange} />\n                        <FormHelperText >Required</FormHelperText>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Category:</h6>\n                        <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                            <option value={\"Other\"}>Other</option>\n                            <option value={\"Beer\"}>Beer</option>\n                            <option value={\"Vinegar\"}>Vinegar</option>\n                            <option value={\"Bread\"}>Bread</option>\n                            <option value={\"Pickle\"}>Pickle</option>\n                            <option value={\"Kombucha\"}>Kombucha</option>\n                            <option value={\"Miso\"}>Miso</option>\n                            <option value={\"Wine\"}>Wine</option>\n                            <option value={\"Kimchi\"}>Kimchi</option>\n                        </NativeSelect>\n                    </FormControl>\n                    <FormControl fullWidth={true}>\n                        <h6>Ingredients:</h6>\n                        <ul className=\"ingList\">\n                            {this.state.ingredients.map(item => (\n                                <li className=\"ingListItem\" key={item.ingredient}>\n                                    {item.ingredient}: {item.amount}{item.units}\n                                    <button id=\"ingBtn\" onClick={() => this.deleteIngredient(item.ingredient)}>&times;</button>\n                                </li>\n                            ))}\n                        </ul>\n                        <div>\n                            <h5 className=\"subLabel\">Name:</h5>\n                            <input\n                                value={this.state.ingredient}\n                                id=\"ingName\"\n                                className=\"subInput\"\n                                name=\"ingredient\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Amount:</h5>\n                            <input\n                                value={this.state.amount}\n                                id=\"ingAmount\"\n                                className=\"subInput\"\n                                type=\"number\"\n                                min={1}\n                                placeholder={1}\n                                name=\"amount\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Unit:</h5>\n                            <NativeSelect\n                                value={this.state.units}\n                                className=\"subInput\"\n                                id=\"ingUnit\"\n                                name=\"units\"\n                                onChange={this.handleInputChange}>\n                                <option value={\"mL\"}>mL</option>\n                                <option value={\"L\"}>L</option>\n                                <option value={\"mg\"}>mg</option>\n                                <option value={\"g\"}>g</option>\n                                <option value={\"kg\"}>kg</option>\n                            </NativeSelect>\n                            <br></br>\n                            <button id=\"ingBtn\" onClick={this.addIngredient}>+</button>\n                        </div>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Description:</h6>\n                        <TextField\n                            multiline\n                            value={this.state.description}\n                            onChange={this.handleInputChange}\n                            name=\"description\"\n                        />\n                    </FormControl>\n\n\n                    <FormControl>\n                        <h6>Start Time:</h6>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                            <KeyboardTimePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormControl>\n\n                    <FormControl fullWidth={true}>\n                        <h6>Brew Time:</h6>\n                        <div>\n                            <h5 className=\"subLabel\">Days:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"days\"\n                                type=\"number\"\n                                min={0}\n                                name=\"days\"\n                                onChange={this.handleInputChange}\n                                placeholder={0}\n                                value={this.state.days}>\n                            </input>\n\n                            <br></br>\n                            <h5 className=\"subLabel\">Hours:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={23}\n                                name=\"hours\"\n                                value={this.state.hours}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Minutes:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={59}\n                                name=\"mins\"\n                                value={this.state.mins}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                        </div>\n                    </FormControl>\n\n                    <FormControl>\n                        <h6>Image:</h6>\n                        <input type=\"file\"\n                            name=\"file\"\n                            onChange={this.imageUpload}\n                            ref={ref => this.fileInput = ref}\n                        ></input>\n                        {this.state.picture ? (\n                            <img src={this.state.picture} alt=\"Uploaded Brew\" style={{ width: '200px' }}></img>\n                        ) : (\n                                <p>No image uploaded.</p>\n                            )}\n\n                    </FormControl>\n\n                    <div id=\"wrapper\">\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            id=\"createBtn\"\n                            onClick={this.handleSubmit}>\n                            Create New Brew</Button>\n                    </div>\n\n\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default NewBrewForm;\n","import React from \"react\";\nimport NewBrewForm from \"../components/NewBrewForm\";\n\nfunction NewBrew() {\n    return (\n\n        <NewBrewForm />\n\n    );\n}\n\nexport default NewBrew;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport { Grid, InputLabel, NativeSelect, FormControl, Input, FormHelperText, Typography, Paper } from '@material-ui/core';\n\n\n\nclass Home extends Component {\n    state = {\n        database: [],\n        recipes: [],\n        category: \"All\",\n        search: \"\",\n        brewStatus: \"All\",\n        user: \"\"\n    }\n\n    componentDidMount() {\n        this.loadRecipes();\n    }\n\n    setUser = (user) => {\n        this.setState({ user: user }, this.filterFeed)\n    }\n\n    filterFeed = () => {\n        const filteredrecipes = this.state.database.filter(recipe => {\n            let isMatch = true;\n            if (this.state.category !== \"All\") {\n                isMatch = isMatch && this.categoryFilter(recipe);\n            }\n\n            if (this.state.search) {\n                isMatch = isMatch && this.ingredientFilter(recipe);\n            }\n\n            if (this.state.brewStatus !== \"All\") {\n                isMatch = isMatch && this.statusFilter(recipe);\n            }\n\n            if (this.state.user) {\n                isMatch = isMatch && this.userFilter(recipe);\n            }\n\n            return isMatch;\n        });\n        this.setState({ recipes: filteredrecipes });\n    }\n\n    //Filters by chosen category\n    categoryFilter(recipe) {\n        return recipe.category === this.state.category;\n    }\n\n    //sets user\n    userFilter(recipe) {\n        return recipe.user === this.state.user;\n    }\n\n    //Filters by brew status\n    statusFilter(recipe) {\n        if (this.state.brewStatus === \"Finished\") {\n            return new Date(recipe.endTime) < new Date();\n        } else if (this.state.brewStatus === \"Brewing\") {\n            return new Date(recipe.endTime) > new Date();\n        }\n    }\n\n    //Searches array for ingredients\n    ingredientFilter(recipe) {\n        const searchTerm = this.state.search;\n        if (recipe.ingredients.length !== 0) {\n            for (let i = 0; i < recipe.ingredients.length; i++) {\n                if (recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase())) {\n                    return recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase());\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.filterFeed();\n        });\n    };\n\n    loadRecipes = () => {\n        API.getAllRecipes()\n            .then(res =>\n                this.setState({\n                    database: res.data,\n                    recipes: res.data\n                }))\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={6}>\n                <Grid item xs={12} sm={8} >\n                    <FormControl\n                        fullWidth={true}>\n                        <InputLabel>Search Ingredients</InputLabel>\n                        <Input\n                            value={this.state.search}\n                            name=\"search\"\n                            onChange={this.handleInputChange} />\n                    </FormControl>\n                </Grid>\n\n                <Grid container item justify=\"center\" spacing={6} xs={12} sm={8} >\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Beer\"}>Beer</option>\n                                <option value={\"Vinegar\"}>Vinegar</option>\n                                <option value={\"Bread\"}>Bread</option>\n                                <option value={\"Pickle\"}>Pickle</option>\n                                <option value={\"Kombucha\"}>Kombucha</option>\n                                <option value={\"Miso\"}>Miso</option>\n                                <option value={\"Wine\"}>Wine</option>\n                                <option value={\"Kimchi\"}>Kimchi</option>\n                                <option value={\"Other\"}>Other</option>\n                            </NativeSelect>\n                            <FormHelperText>Filter by Category</FormHelperText>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.status} name=\"brewStatus\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Finished\"}>Finished</option>\n                                <option value={\"Brewing\"}>Currently Brewing</option>\n\n                            </NativeSelect>\n                            <FormHelperText>Filter by Brewing Status</FormHelperText>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                {(this.state.user) ? <Grid item xs={12} sm={8}><Paper><Typography variant=\"h3\" style={{ padding: \".5em\" }}>{this.state.user}'s Brews<span id=\"clearUser\" onClick={() => this.setUser(\"\")}>&times;</span></Typography> </Paper></Grid> : <></>}\n                <Grid container item justify=\"center\" xs={12} sm={8}>\n                    {this.state.recipes.length > 0 ? (\n                        <>\n                            {this.state.recipes.map(recipe => (\n\n\n\n                                <Card key={recipe._id}\n                                    id={recipe._id}\n                                    category={recipe.category}\n                                    title={recipe.title}\n                                    description={recipe.description}\n                                    user={recipe.user}\n                                    picture={recipe.picture}\n                                    ingredients={recipe.ingredients}\n                                    endTime={recipe.endTime}\n                                    brewLength={recipe.brewLength}\n                                    setUser={this.setUser} ></Card>\n\n\n\n                            ))}\n                        </>\n                    ) : (\n                            <Grid item xs={12} sm={8} ><h3>No Results to Display</h3></Grid>\n                        )\n                    }\n                </Grid>\n            </Grid>\n\n        )\n    };\n}\n\nexport default Home;","import React, { useState, useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errors: {\n    fontWeight: \"bolder\",\n    color: \"red\"\n  }\n}));\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nfunction SignUp(props) {\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const defaultFormErrors = {\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    duplicate: \"\"\n  };\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    const newFieldValues = { ...formValues, [name]: value };\n    setFormValues(newFieldValues);\n\n    const newFormErrors = { ...formErrors };\n\n    switch (name) {\n      case \"username\":\n        newFormErrors.username =\n          value.length < 3 ? \"minimum of 3 characters required\" : \"\";\n        break;\n      case \"password\":\n        newFormErrors.password =\n          value.length < 6 ? \"minimum of 6 characters required\" : \"\";\n        break;\n      case \"confirmPassword\":\n        newFormErrors.confirmPassword =\n          formValues.password !== value ? \"Must match Password\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const user = useContext(UserContext);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const { username, password, confirmPassword } = formValues;\n    if (formValid(formErrors)) {\n      if (username && password === confirmPassword) {\n        const data = {\n          username: username,\n          password: password\n        };\n        API.signup(data)\n          .then(() => {\n            Auth.logIn(username, password, response => {\n              user.setUser(response);\n              props.history.push(\"/\");\n            });\n          })\n          .catch(err => {\n            console.log(err.response.data.error);\n            setFormErrors({\n              ...defaultFormErrors,\n              duplicate: \"Username is taken. Please try again.\"\n            });\n          });\n      }\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                noValidate\n                autoFocus\n                value={formValues.username}\n                onChange={changeHandler}\n              />\n              {formErrors.username.length > 0 && (\n                <span className={classes.errors}>{formErrors.username}</span>\n              )}\n              {formErrors.duplicate.length > 0 && (\n                <span className={classes.errors}>{formErrors.duplicate}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                noValidate\n                autoComplete=\"current-password\"\n                value={formValues.password}\n                onChange={changeHandler}\n              />\n              {formErrors.password.length > 0 && (\n                <span className={classes.errors}>{formErrors.password}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                noValidate\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={formValues.confirmPassword}\n                onChange={changeHandler}\n              />\n              {formErrors.confirmPassword.length > 0 && (\n                <span className={classes.errors}>\n                  {formErrors.confirmPassword}\n                </span>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Sign Up\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {\"Already have an account? Log In\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction SignUpPage() {\n  return <SignUpForm />;\n}\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        Auth.isLoggedIn() ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )\n    )} />\n);\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n    margin: 10,\n    [theme.breakpoints.down('xs')]: {\n      display: \"none\",\n    },\n    float: 'left'\n  },\n  avatar: {\n    margin: 10,\n    float: 'left'\n  },\n\n  link: {\n    color: 'white',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: \".75rem\",\n    },\n    textDecoration: \"none\"\n  },\n\n  appitems: {\n    [theme.breakpoints.down('xs')]: {\n      margin: \"0 auto\",\n    },\n  }\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  return (\n\n    <AppBar position=\"static\">\n      <Toolbar className={classes.appitems}>\n        {props.loggedIn ? <>\n          <Avatar\n            variant=\"square\"\n            src=\"../logo192.png\"\n            className={classes.avatar}\n          />\n          <Typography variant=\"h4\" className={classes.title}>\n            Fermention\n          </Typography> <Button>\n            <Link color=\"inherit\" to=\"/home\" className={classes.link}>\n              Home\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/newbrew\" className={classes.link}>\n              New Brew\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/profile\" className={classes.link}>Profile</Link>\n          </Button></>\n          :\n          <div style={{ margin: '0 auto' }}>\n            <Avatar\n              variant=\"square\"\n              src=\"../logo192.png\"\n              className={classes.avatar}\n            />\n            <Typography variant=\"h4\" className={classes.title}>\n              Fermention\n          </Typography></div>}\n      </Toolbar>\n    </AppBar>\n\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Profile from \"./pages/Profile\"\nimport Login from \"./pages/Login\"\nimport NewBrew from \"./pages/NewBrew\";\nimport Home from \"./pages/Home\";\nimport SignUp from \"./pages/SignUp\";\nimport { Container } from \"@material-ui/core\";\nimport UserContext from \"./context/UserContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport API from \"./utils/API\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport NavBar from \"./components/NavBar\";\nimport Auth from \"./utils/Auth\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#55370f',\n    },\n\n  },\n});\n\nclass App extends Component {\n  state = {\n    user: null\n  }\n\n  setUser = user => {\n    this.setState({ user: user })\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      API.getUser()\n        .then(response => {\n          this.setUser(response.data)\n        })\n    }\n  }\n\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    let loggedIn = Auth.isLoggedIn();\n    return (\n      <>\n        <ThemeProvider theme={theme}>\n          <Container>\n            <Router>\n              <NavBar loggedIn={loggedIn} />\n              <UserContext.Provider\n                value={{\n                  user: user,\n                  setUser: setUser\n                }}\n              >\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <ProtectedRoute exact path=\"/home\" component={Home} />\n                <ProtectedRoute exact path=\"/newbrew\" component={NewBrew} />\n                <ProtectedRoute exact path=\"/profile\" component={Profile} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n              </UserContext.Provider>\n            </Router>\n          </Container>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}