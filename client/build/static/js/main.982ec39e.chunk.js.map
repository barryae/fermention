{"version":3,"sources":["utils/API.js","components/Timer/index.js","components/CloseButton.js","components/ProfileCard.js","context/UserContext.js","utils/Auth.js","components/ProfileBio/index.js","pages/Profile.js","components/LogInForm.js","pages/Login.js","components/NewBrewForm/index.js","pages/NewBrew.js","components/Card/index.js","pages/Home.js","components/SignUpForm.js","pages/SignUp.js","components/ProtectedRoute.js","components/NavBar/index.js","App.js","index.js"],"names":["signup","input","axios","post","authenticate","getUser","get","headers","Authorization","localStorage","getItem","createRecipe","recipe","deleteRecipe","id","delete","getUserRecipes","getAllRecipes","Timer","props","state","brewDate","Date","endTime","date","timer","this","timerID","setInterval","tick","clearInterval","msecs","days","Math","floor","hours","mins","secs","t","setState","timetoBrew","Component","CloseButton","IconButton","aria-label","onClick","e","preventDefault","console","log","API","then","response","loadRecipes","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","marginBottom","marginTop","image","margin","marginLeft","float","ProfileCard","classes","Grid","container","item","xs","key","Paper","className","variant","elevation","justify","Typography","title","user","sm","src","picture","style","width","alt","category","ingredients","length","map","ingredient","amount","units","description","brewLength","createContext","Auth","isLoggedIn","logIn","username","password","cb","setItem","data","token","logOut","removeItem","getToken","logOutBtn","ProfileBio","setUser","useContext","UserContext","history","useHistory","Button","color","Link","push","to","link","Profile","database","recipes","search","brewStatus","handleInputChange","event","target","name","value","filterFeed","res","_id","filteredrecipes","filter","isMatch","categoryFilter","ingredientFilter","statusFilter","searchTerm","i","toLowerCase","FormControl","fullWidth","InputLabel","Input","onChange","NativeSelect","FormHelperText","status","contextType","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","withRouter","useState","fieldValues","setFieldValues","changeHandler","newFieldValues","submitHandler","Container","component","maxWidth","CssBaseline","Avatar","onSubmit","noValidate","TextField","required","label","autoComplete","autoFocus","type","href","Login","NewBrewForm","startTime","loading","message","parseInt","handleDateChange","deleteIngredient","filteredArr","obj","calcEndDate","setMinutes","getMinutes","setHours","getHours","setDate","getDate","calcBrewLength","addIngredient","unique","newIng","imageUpload","a","async","files","FormData","append","fetch","method","body","json","file","secure_url","handleSubmit","context","result","catch","err","fileInput","setTimeout","bind","min","placeholder","multiline","utils","DateFnsUtils","format","max","ref","borderRadius","textAlign","size","NewBrew","Card","Home","userFilter","includes","errors","fontWeight","formValid","formErrors","valid","Object","values","forEach","val","confirmPassword","formValues","setFormValues","defaultFormErrors","duplicate","setFormErrors","newFormErrors","error","SignUpPage","SignUpForm","ProtectedRoute","rest","render","breakpoints","down","fontSize","appitems","NavBar","AppBar","position","Toolbar","loggedIn","height","createMuiTheme","primary","App","ThemeProvider","Provider","exact","path","SignUp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.982ec39e.chunk.js","sourcesContent":["import axios from \"axios\";\nexport default {\n  signup: function (input) {\n    return axios.post(\"/api/signup\", input);\n  },\n  //probably need to send username or password with request?\n  authenticate: function (input) {\n    return axios.post(\"/api/authenticate\", input);\n  },\n  getUser: function () {\n    return axios.get(\"/api/me\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n  },\n  createRecipe: function (recipe) {\n    return axios.post(\"/api/recipes\", recipe);\n  },\n  deleteRecipe: function (id) {\n    //console.log(\"id in API deleteRecipe\", id);\n    return axios.delete(\"/api/recipes/\" + id);\n  },\n  getUserRecipes: function (id) {\n    //console.log(\"id in API\", id);\n    return axios.get(\"/api/recipes/\" + id);\n  },\n  getAllRecipes: function () {\n    return axios.get(\"/api/recipes\");\n  }\n};\n","import React, { Component } from \"react\";\n\nclass Timer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            brewDate: new Date(this.props.endTime),\n            date: new Date(),\n            timer: \"00:00:00:00\"\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    timetoBrew(msecs) {\n        if (msecs <= 0) {\n            return \"FINISHED!\";\n        } else {\n            let days = Math.floor(msecs / (24 * 60 * 60 * 1000));\n            msecs = msecs % (24 * 60 * 60 * 1000);\n            let hours = Math.floor(msecs / (60 * 60 * 1000));\n\n            msecs = msecs % (60 * 60 * 1000);\n            let mins = Math.floor(msecs / (60 * 1000));\n\n            msecs = msecs % (60 * 1000);\n            let secs = Math.floor(msecs / 1000);\n\n            let timerStr = `${days} days ${hours} hours ${mins} minutes ${secs} seconds`;\n            return timerStr;\n        }\n    }\n\n    tick() {\n        let t = this.state.brewDate - this.state.date;\n        this.setState({\n            date: new Date(),\n            timer: this.timetoBrew(t)\n        });\n    }\n\n    render() {\n        return (\n            <>{this.state.timer}</>\n        );\n    }\n}\n\nexport default Timer;","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport API from \"../utils/API\";\n\nexport default function CloseButton(props) {\n  const handleDelete = e => {\n    e.preventDefault();\n    console.log(\"I deleted\");\n    console.log(\"props\", props);\n    API.deleteRecipe(props.id).then(response => {\n      console.log(\"Delete Complete\");\n      props.loadRecipes();\n    });\n  };\n\n  return (\n    <IconButton aria-label=\"delete\" onClick={handleDelete}>\n      <DeleteIcon />\n    </IconButton>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"./Timer\";\nimport CloseButton from \"./CloseButton\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: \"left\"\n  }\n}));\n\nconst ProfileCard = props => {\n  const classes = useStyles();\n\n  return (\n    <Grid container item xs={12} key={props.id} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n        <Grid container item xs={12} spacing={2}>\n          <Grid container item xs={12} justify=\"space-between\">\n            <Typography variant=\"h5\">\n              {props.title} by {props.user ? props.user : \"Anonymous User\"}{\" \"}\n            </Typography>\n            <CloseButton id={props.id} loadRecipes={props.loadRecipes} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <img\n              className={classes.image}\n              src={\n                props.picture !== \"\"\n                  ? props.picture\n                  : \"./images/fermention-default.jpg\"\n              }\n              style={{ width: \"100%\" }}\n              alt=\"User Brew\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">\n              <b>Category:&nbsp;</b>\n              {props.category}\n            </Typography>\n\n            <Typography variant=\"body1\">\n              <b>Ingredients:</b>{\" \"}\n            </Typography>\n            <ul>\n              {props.ingredients.length > 0 ? (\n                props.ingredients.map(ingredient => (\n                  <li key={ingredient.ingredient}>\n                    {ingredient.ingredient}&nbsp;{ingredient.amount}\n                    {ingredient.units}\n                  </li>\n                ))\n              ) : (\n                  <p>(None Listed)</p>\n                )}\n            </ul>\n\n            <Typography variant=\"body1\">\n              <b>Description:&nbsp;</b>\n              {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Total Brew Time:</b> {props.brewLength}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Brewing Status:</b> <Timer endTime={props.endTime}></Timer>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default ProfileCard;\n","import { createContext } from \"react\";\n\nexport default createContext();","import axios from \"axios\";\n\nfunction Auth() {\n\n  function logIn(username, password, cb) {\n    axios.post(\"/api/authenticate\", { username: username, password: password })\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken\n  }\n}\n\nexport default Auth();\n","import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Link, Button } from \"@material-ui/core\";\nimport Auth from \"../../utils/Auth\";\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: 'left'\n  },\n\n  logOutBtn: {\n    float: 'right',\n  }\n\n}));\n\nconst ProfileBio = props => {\n  const { setUser } = useContext(UserContext);\n  const classes = useStyles();\n  let history = useHistory();\n  return (\n\n    <Paper className={classes.paper} variant=\"outlined\" elevation={2} style={{ width: '100%' }}>\n\n      <Typography variant=\"h5\">{props.user ? props.user : \"User\"}'s Brews</Typography>\n      <Button color=\"secondary\" variant=\"contained\" className={classes.logOutBtn}>\n        <Link color=\"inherit\" onClick={() => {\n          Auth\n            .logOut(() => {\n              setUser(null);\n              history.push('/');\n            })\n        }}\n          to='/'\n          className={classes.link}>Logout</Link>\n      </Button>\n\n      {/* <Grid item xs={12} sm={12}>\n            <Typography variant=\"body1\">\n              <b>Bio:&nbsp;</b>\n              {props.description ? props.description : \"No Bio\"}\n            </Typography>\n          </Grid>  */}\n\n    </Paper>\n\n  );\n};\n\nexport default ProfileBio;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport {\n  Grid,\n  InputLabel,\n  NativeSelect,\n  FormControl,\n  Input,\n  FormHelperText\n} from \"@material-ui/core\";\nimport UserContext from \"../context/UserContext\";\nimport ProfileBio from \"../components/ProfileBio/index\";\n\nclass Profile extends Component {\n  state = {\n    username: \"\",\n    user: \"\",\n    database: [],\n    recipes: [],\n    category: \"All\",\n    search: \"\",\n    brewStatus: \"All\"\n  };\n\n  componentDidMount() {\n    //console.log(this.state.user);\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      API.getUser().then(response => {\n        //console.log(response);\n        this.setUser(response.data._id);\n        this.setState({ username: response.data.username });\n      });\n    }\n  }\n\n  setUser = id => {\n    //console.log(id);\n    this.setState({ user: id }, this.loadRecipes);\n  };\n\n  filterFeed() {\n    const filteredrecipes = this.state.database.filter(recipe => {\n      let isMatch = true;\n      if (this.state.category !== \"All\") {\n        isMatch = isMatch && this.categoryFilter(recipe);\n      }\n\n      if (this.state.search) {\n        isMatch = isMatch && this.ingredientFilter(recipe);\n      }\n\n      if (this.state.brewStatus !== \"All\") {\n        isMatch = isMatch && this.statusFilter(recipe);\n      }\n      return isMatch;\n    });\n    this.setState({ recipes: filteredrecipes });\n  }\n\n  //Filters by chosen category\n  categoryFilter(recipe) {\n    return recipe.category === this.state.category;\n  }\n\n  //Filters by brew status\n  statusFilter(recipe) {\n    if (this.state.brewStatus === \"Finished\") {\n      return new Date(recipe.endTime) < new Date();\n    } else if (this.state.brewStatus === \"Brewing\") {\n      return new Date(recipe.endTime) > new Date();\n    }\n  }\n\n  //Searches array for ingredients\n  ingredientFilter(recipe) {\n    const searchTerm = this.state.search;\n    if (recipe.ingredients.length !== 0) {\n      for (let i = 0; i < recipe.ingredients.length; i++) {\n        if (\n          recipe.ingredients[i].ingredient.toLowerCase() ===\n          searchTerm.toLowerCase()\n        ) {\n          return (\n            recipe.ingredients[i].ingredient.toLowerCase() ===\n            searchTerm.toLowerCase()\n          );\n        }\n      }\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState(\n      {\n        [name]: value\n      },\n      () => {\n        this.filterFeed();\n      }\n    );\n  };\n\n  loadRecipes = () => {\n    //console.log(\"this.state.user in loadRecipes\", this.state);\n    API.getUserRecipes(this.state.user).then(res => {\n      //console.log(\"res.data in loadRecipes\", res.data.recipes);\n      this.setState({\n        database: res.data.recipes,\n        recipes: res.data.recipes\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Grid container justify=\"center\" spacing={6}>\n        <Grid container item justify=\"center\" xs={12} sm={8}>\n          <ProfileBio user={this.state.username} />\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <FormControl fullWidth={true}>\n            <InputLabel>Search Ingredients</InputLabel>\n            <Input\n              value={this.state.search}\n              name=\"search\"\n              onChange={this.handleInputChange}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid container item justify=\"center\" spacing={6} xs={12} sm={8}>\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth={true}>\n              <NativeSelect\n                value={this.state.category}\n                name=\"category\"\n                onChange={this.handleInputChange}\n              >\n                <option value={\"All\"}>All</option>\n                <option value={\"Beer\"}>Beer</option>\n                <option value={\"Vinegar\"}>Vinegar</option>\n                <option value={\"Bread\"}>Bread</option>\n                <option value={\"Pickle\"}>Pickle</option>\n                <option value={\"Kombucha\"}>Kombucha</option>\n                <option value={\"Miso\"}>Miso</option>\n                <option value={\"Wine\"}>Wine</option>\n                <option value={\"Kimchi\"}>Kimchi</option>\n                <option value={\"Other\"}>Other</option>\n              </NativeSelect>\n              <FormHelperText>Filter by Category</FormHelperText>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <FormControl fullWidth={true}>\n              <NativeSelect\n                value={this.state.status}\n                name=\"brewStatus\"\n                onChange={this.handleInputChange}\n              >\n                <option value={\"All\"}>All</option>\n                <option value={\"Finished\"}>Finished</option>\n                <option value={\"Brewing\"}>Currently Brewing</option>\n              </NativeSelect>\n              <FormHelperText>Filter by Brewing Status</FormHelperText>\n            </FormControl>\n          </Grid>\n        </Grid>\n\n        <Grid container item justify=\"center\" xs={12} sm={8}>\n          {this.state.recipes.length > 0 ? (\n            <>\n              {this.state.recipes.map(recipe => (\n                <ProfileCard\n                  loadRecipes={this.loadRecipes}\n                  key={recipe._id}\n                  id={recipe._id}\n                  category={recipe.category}\n                  title={recipe.title}\n                  description={recipe.description}\n                  user={recipe.user}\n                  picture={recipe.picture}\n                  ingredients={recipe.ingredients}\n                  endTime={recipe.endTime}\n                  brewLength={recipe.brewLength}\n                ></ProfileCard>\n              ))}\n            </>\n          ) : (\n              <Grid item xs={12} sm={8}>\n                <h3>No Results to Display</h3>\n              </Grid>\n            )}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nProfile.contextType = UserContext;\n\nexport default Profile;\n","import React, { useState, useContext } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction LogIn(props) {\n    const [fieldValues, setFieldValues] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const user = useContext(UserContext);\n\n    const changeHandler = (e) => {\n        const { name, value } = e.target;\n        const newFieldValues = { ...fieldValues, [name]: value };\n        setFieldValues(newFieldValues);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const { username, password } = fieldValues;\n        if (username && password) {\n            Auth.logIn(username, password, (response) => {\n                user.setUser(response);\n                props.history.push(\"/\");\n            });\n        }\n    }\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" >\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log In\n                </Typography>\n                <form className={classes.form} onSubmit={submitHandler} noValidate>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                value={fieldValues.username}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={fieldValues.password}\n                                onChange={changeHandler}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={submitHandler}\n                    >\n                        Log In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default withRouter(LogIn);","import React from \"react\";\nimport LoginForm from \"../components/LogInForm\";\n\nfunction Login() {\n\n    return (\n        <>\n            <LoginForm /></>\n    );\n}\n\nexport default Login;","import 'date-fns';\nimport React, { Component } from \"react\";\nimport { Button, TextField, Container, NativeSelect, FormControl, Input, FormHelperText } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardTimePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport API from \"../../utils/API\"\nimport \"./style.css\";\nimport UserContext from '../../context/UserContext';\n\nclass NewBrewForm extends Component {\n    static contextType = UserContext;\n\n    //Sets state\n    state = {\n        title: \"\",\n        category: \"Other\",\n        description: \"\",\n        ingredients: [],\n        startTime: new Date(),\n        endTime: new Date(),\n        days: 0,\n        hours: 0,\n        mins: 0,\n        picture: \"\",\n        ingredient: \"\",\n        amount: 1,\n        units: \"mL\",\n        loading: false,\n        message: \"\"\n    }\n\n    //Handles changes in input\n    handleInputChange = event => {\n        const { name, value, type } = event.target;\n\n        this.setState({\n            [name]: type === 'number' ? parseInt(value) : value\n        });\n\n    };\n\n    //Handles changes in date\n    handleDateChange = date => {\n        this.setState({\n            startTime: date\n        });\n    };\n\n    //Deletes specific ingredient\n    deleteIngredient = name => {\n        let filteredArr = this.state.ingredients.filter(function (obj) {\n            return obj.ingredient !== name;\n        });\n\n        this.setState({\n            ingredients: filteredArr\n        });\n    };\n\n    //Adds time from brew lenght to create end time\n    calcEndDate = (days, hours, mins) => {\n        let endTime = new Date();\n        let startTime = this.state.startTime;\n        endTime.setMinutes(startTime.getMinutes() + mins);\n        endTime.setHours(endTime.getHours() + hours);\n        endTime.setDate(endTime.getDate() + days);\n        return endTime;\n    }\n\n    //Formats brew length\n    calcBrewLength = (days, hours, mins) => {\n        let brewLength = `${days} days ${hours} hours ${mins} minutes 0 seconds`\n        return brewLength;\n    }\n\n    //Adds new ingredient\n    addIngredient = event => {\n        event.preventDefault();\n        let ingredients = this.state.ingredients;\n        let unique = true;\n\n        for (let i = 0; i < ingredients.length; i++) {\n            if (this.state.ingredient.toLowerCase() === ingredients[i].ingredient.toLowerCase()) {\n                unique = false;\n            }\n        }\n\n        if (this.state.ingredient && unique) {\n            let newIng = {\n                ingredient: this.state.ingredient,\n                amount: this.state.amount,\n                units: this.state.units\n            }\n            this.setState({\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\",\n                ingredients: [...ingredients, newIng]\n            });\n        }\n    }\n\n    //image uploading\n    imageUpload = async event => {\n        const files = event.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'fermention');\n        this.setState({ loading: true });\n        const res = await fetch(\n            'https://api.cloudinary.com/v1_1/dyiisb9c8/image/upload',\n            {\n                method: 'POST',\n                body: data\n            }\n        )\n        const file = await res.json();\n\n        this.setState({\n            picture: file.secure_url,\n            loading: false\n        });\n\n\n\n    }\n\n    //Creates new brew\n    handleSubmit = event => {\n        event.preventDefault();\n        const data = {\n            user: this.context.user.username,\n            title: this.state.title,\n            category: this.state.category,\n            ingredients: this.state.ingredients,\n            description: this.state.description,\n            startTime: this.state.startTime,\n            endTime: this.calcEndDate(this.state.days, this.state.hours, this.state.mins),\n            brewLength: this.calcBrewLength(this.state.days, this.state.hours, this.state.mins),\n            picture: this.state.picture\n        }\n\n        //Only uploads to database if title exists\n        if (this.state.title !== \"\") {\n            // console.log(data)\n\n            //Runs API function\n            API.createRecipe(data)\n                .then(result => {\n                    // console.log(result)\n                })\n                .catch(err => console.log(err))\n\n            //Resets state\n            this.setState({\n                title: \"\",\n                category: \"Other\",\n                description: \"\",\n                ingredients: [],\n                startTime: new Date(),\n                endTime: new Date(),\n                days: 0,\n                hours: 0,\n                mins: 0,\n                picture: \"\",\n                ingredient: \"\",\n                amount: 1,\n                units: \"mL\",\n                message: \"New Brew Added!\"\n            });\n\n            //Resets file input\n            this.fileInput.value = \"\";\n\n            //displays message for limited time\n            setTimeout(\n                function () {\n                    this.setState({ message: \"\" });\n                }\n                    .bind(this),\n                5000\n            );\n\n        } else {\n            this.setState({ message: \"A title is required!\" })\n            setTimeout(\n                function () {\n                    this.setState({ message: \"\" });\n                }\n                    .bind(this),\n                5000\n            );\n        }\n\n    };\n\n    //Renders form\n    render() {\n        // console.log(this.context.user);\n        return (\n            <>\n                <Container maxWidth=\"sm\">\n                    <FormControl\n                        fullWidth={true}>\n                        <h6 >Title:</h6>\n                        <Input\n                            value={this.state.title}\n                            name=\"title\"\n                            onChange={this.handleInputChange} />\n                        <FormHelperText >Required</FormHelperText>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Category:</h6>\n                        <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                            <option value={\"Other\"}>Other</option>\n                            <option value={\"Beer\"}>Beer</option>\n                            <option value={\"Vinegar\"}>Vinegar</option>\n                            <option value={\"Bread\"}>Bread</option>\n                            <option value={\"Pickle\"}>Pickle</option>\n                            <option value={\"Kombucha\"}>Kombucha</option>\n                            <option value={\"Miso\"}>Miso</option>\n                            <option value={\"Wine\"}>Wine</option>\n                            <option value={\"Kimchi\"}>Kimchi</option>\n                        </NativeSelect>\n                    </FormControl>\n                    <FormControl fullWidth={true}>\n                        <h6>Ingredients:</h6>\n                        <ul className=\"ingList\">\n                            {this.state.ingredients.map(item => (\n                                <li className=\"ingListItem\" key={item.ingredient}>\n                                    {item.ingredient}: {item.amount}{item.units}\n                                    <button id=\"ingBtn\" onClick={() => this.deleteIngredient(item.ingredient)}>&times;</button>\n                                </li>\n                            ))}\n                        </ul>\n                        <div>\n                            <h5 className=\"subLabel\">Name:</h5>\n                            <input\n                                value={this.state.ingredient}\n                                id=\"ingName\"\n                                className=\"subInput\"\n                                name=\"ingredient\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Amount:</h5>\n                            <input\n                                value={this.state.amount}\n                                id=\"ingAmount\"\n                                className=\"subInput\"\n                                type=\"number\"\n                                min={1}\n                                placeholder={1}\n                                name=\"amount\"\n                                onChange={this.handleInputChange}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Unit:</h5>\n                            <NativeSelect\n                                value={this.state.units}\n                                className=\"subInput\"\n                                id=\"ingUnit\"\n                                name=\"units\"\n                                onChange={this.handleInputChange}>\n                                <option value={\"mL\"}>mL</option>\n                                <option value={\"L\"}>L</option>\n                                <option value={\"mg\"}>mg</option>\n                                <option value={\"g\"}>g</option>\n                                <option value={\"kg\"}>kg</option>\n                            </NativeSelect>\n                            <br></br>\n                            <button id=\"ingBtn\" onClick={this.addIngredient}>+</button>\n                        </div>\n                    </FormControl>\n\n                    <FormControl\n                        fullWidth={true}>\n                        <h6>Description:</h6>\n                        <TextField\n                            multiline\n                            value={this.state.description}\n                            onChange={this.handleInputChange}\n                            name=\"description\"\n                        />\n                    </FormControl>\n\n\n                    <FormControl>\n                        <h6>Start Time:</h6>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                format=\"MM/dd/yyyy\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                            <KeyboardTimePicker\n                                margin=\"normal\"\n                                variant=\"inline\"\n                                onChange={this.handleDateChange}\n                                value={this.state.startTime}\n                            />\n                        </MuiPickersUtilsProvider>\n                    </FormControl>\n\n                    <FormControl fullWidth={true}>\n                        <h6>Brew Time:</h6>\n                        <div>\n                            <h5 className=\"subLabel\">Days:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"days\"\n                                type=\"number\"\n                                min={0}\n                                name=\"days\"\n                                onChange={this.handleInputChange}\n                                placeholder={0}\n                                value={this.state.days}>\n                            </input>\n\n                            <br></br>\n                            <h5 className=\"subLabel\">Hours:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={23}\n                                name=\"hours\"\n                                value={this.state.hours}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                            <br></br>\n                            <h5 className=\"subLabel\">Minutes:</h5>\n                            <input\n                                className=\"subInput\"\n                                id=\"hours\"\n                                type=\"number\"\n                                min={0}\n                                max={59}\n                                name=\"mins\"\n                                value={this.state.mins}\n                                onChange={this.handleInputChange}\n                                placeholder={0}></input>\n                        </div>\n                    </FormControl>\n\n                    <FormControl>\n                        <h6>Image:</h6>\n                        <input type=\"file\"\n                            name=\"file\"\n                            onChange={this.imageUpload}\n                            ref={ref => this.fileInput = ref}\n                        ></input>\n                        {this.state.picture ? (\n                            <img src={this.state.picture} alt=\"Uploaded Brew\" style={{ width: '200px' }}></img>\n                        ) : (\n                                <p>No image uploaded.</p>\n                            )}\n\n                    </FormControl>\n                    {(this.state.message) ? <p style={{ borderRadius: '4px', padding: '1em', backgroundColor: 'white', textAlign: 'center', margin: '0 auto' }}><b>{this.state.message}</b></p> : <></>}\n                    <div id=\"wrapper\">\n                        <Button\n                            size=\"large\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            id=\"createBtn\"\n                            onClick={this.handleSubmit}>\n                            Create New Brew</Button>\n                    </div>\n\n                </Container>\n\n            </>\n        );\n    }\n}\n\nexport default NewBrewForm;\n","import React from \"react\";\nimport NewBrewForm from \"../components/NewBrewForm\";\n\nfunction NewBrew() {\n    return (\n\n        <NewBrewForm />\n\n    );\n}\n\nexport default NewBrew;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport Timer from \"../Timer\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  image: {\n    margin: theme.spacing(0),\n    marginTop: theme.spacing(0),\n    marginLeft: theme.spacing(0),\n    float: \"left\"\n  }\n}));\n\nconst Card = props => {\n  const classes = useStyles();\n\n  return (\n    <Grid container item xs={12} key={props.id} spacing={2}>\n      <Paper className={classes.paper} variant=\"outlined\" elevation={2}>\n        <Grid container item xs={12} spacing={2}>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">{props.title} by <span onClick={() => props.setUser(props.user)} id=\"feedusername\">{props.user ? props.user : \"Anonymous User\"}</span> </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <img\n              className={classes.image}\n              src={\n                props.picture !== \"\"\n                  ? props.picture\n                  : \"./images/fermention-default.jpg\"\n              }\n              style={{ width: \"100%\" }}\n              alt=\"User Brew\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">\n              <b>Category:&nbsp;</b>\n              {props.category}\n            </Typography>\n\n            <Typography variant=\"body1\">\n              <b>Ingredients:</b>{\" \"}\n            </Typography>\n            <ul>\n              {props.ingredients.length > 0 ? (\n                props.ingredients.map(ingredient => (\n                  <li key={ingredient.ingredient}>\n                    {ingredient.ingredient}&nbsp;{ingredient.amount}\n                    {ingredient.units}\n                  </li>\n                ))\n              ) : (\n                  <p>(None Listed)</p>\n                )}\n            </ul>\n\n            <Typography variant=\"body1\">\n              <b>Description:&nbsp;</b>\n              {props.description ? props.description : \"(Not Provided)\"}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Total Brew Time:</b> {props.brewLength}\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Typography variant=\"body1\">\n              <b>Brewing Status:</b> <Timer endTime={props.endTime}></Timer>\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport { Grid, InputLabel, NativeSelect, FormControl, Input, FormHelperText, Typography, Paper } from '@material-ui/core';\n\n\n\nclass Home extends Component {\n    state = {\n        database: [],\n        recipes: [],\n        category: \"All\",\n        search: \"\",\n        brewStatus: \"All\",\n        user: \"\"\n    }\n\n    componentDidMount() {\n        this.loadRecipes();\n    }\n\n    setUser = (user) => {\n        this.setState({ user: user }, this.filterFeed)\n    }\n\n    filterFeed = () => {\n        const filteredrecipes = this.state.database.filter(recipe => {\n            let isMatch = true;\n            if (this.state.category !== \"All\") {\n                isMatch = isMatch && this.categoryFilter(recipe);\n            }\n\n            if (this.state.search) {\n                isMatch = isMatch && this.ingredientFilter(recipe);\n            }\n\n            if (this.state.brewStatus !== \"All\") {\n                isMatch = isMatch && this.statusFilter(recipe);\n            }\n\n            if (this.state.user) {\n                isMatch = isMatch && this.userFilter(recipe);\n            }\n\n            return isMatch;\n        });\n        this.setState({ recipes: filteredrecipes });\n    }\n\n    //Filters by chosen category\n    categoryFilter(recipe) {\n        return recipe.category === this.state.category;\n    }\n\n    //sets user\n    userFilter(recipe) {\n        return recipe.user === this.state.user;\n    }\n\n    //Filters by brew status\n    statusFilter(recipe) {\n        if (this.state.brewStatus === \"Finished\") {\n            return new Date(recipe.endTime) < new Date();\n        } else if (this.state.brewStatus === \"Brewing\") {\n            return new Date(recipe.endTime) > new Date();\n        }\n    }\n\n    //Searches array for ingredients\n    ingredientFilter(recipe) {\n        const searchTerm = this.state.search;\n        if (recipe.ingredients.length !== 0) {\n            for (let i = 0; i < recipe.ingredients.length; i++) {\n                if (recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase())) {\n                    return recipe.ingredients[i].ingredient.toLowerCase().includes(searchTerm.toLowerCase());\n                }\n            }\n            return false;\n        } else {\n            return false;\n        }\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        }, () => {\n            this.filterFeed();\n        });\n    };\n\n    loadRecipes = () => {\n        API.getAllRecipes()\n            .then(res =>\n                this.setState({\n                    database: res.data,\n                    recipes: res.data\n                }))\n    }\n\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={6}>\n                <Grid item xs={12} sm={8} >\n                    <FormControl\n                        fullWidth={true}>\n                        <InputLabel>Search Ingredients</InputLabel>\n                        <Input\n                            value={this.state.search}\n                            name=\"search\"\n                            onChange={this.handleInputChange} />\n                    </FormControl>\n                </Grid>\n\n                <Grid container item justify=\"center\" spacing={6} xs={12} sm={8} >\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.category} name=\"category\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Beer\"}>Beer</option>\n                                <option value={\"Vinegar\"}>Vinegar</option>\n                                <option value={\"Bread\"}>Bread</option>\n                                <option value={\"Pickle\"}>Pickle</option>\n                                <option value={\"Kombucha\"}>Kombucha</option>\n                                <option value={\"Miso\"}>Miso</option>\n                                <option value={\"Wine\"}>Wine</option>\n                                <option value={\"Kimchi\"}>Kimchi</option>\n                                <option value={\"Other\"}>Other</option>\n                            </NativeSelect>\n                            <FormHelperText>Filter by Category</FormHelperText>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid item xs={12} sm={6} >\n                        <FormControl\n                            fullWidth={true}>\n                            <NativeSelect value={this.state.status} name=\"brewStatus\" onChange={this.handleInputChange}>\n                                <option value={\"All\"}>All</option>\n                                <option value={\"Finished\"}>Finished</option>\n                                <option value={\"Brewing\"}>Currently Brewing</option>\n\n                            </NativeSelect>\n                            <FormHelperText>Filter by Brewing Status</FormHelperText>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                {(this.state.user) ? <Grid item xs={12} sm={8}><Paper variant=\"outlined\" elevation={2} style={{ padding: '1em' }}><Typography variant=\"h5\" style={{ padding: \".5em\" }}>{this.state.user}'s Brews<span id=\"clearUser\" onClick={() => this.setUser(\"\")}>&times;</span></Typography> </Paper></Grid> : <></>}\n                <Grid container item justify=\"center\" xs={12} sm={8}>\n                    {this.state.recipes.length > 0 ? (\n                        <>\n                            {this.state.recipes.map(recipe => (\n\n\n\n                                <Card key={recipe._id}\n                                    id={recipe._id}\n                                    category={recipe.category}\n                                    title={recipe.title}\n                                    description={recipe.description}\n                                    user={recipe.user}\n                                    picture={recipe.picture}\n                                    ingredients={recipe.ingredients}\n                                    endTime={recipe.endTime}\n                                    brewLength={recipe.brewLength}\n                                    setUser={this.setUser} ></Card>\n\n\n\n                            ))}\n                        </>\n                    ) : (\n                            <Grid item xs={12} sm={8} ><h3>No Results to Display</h3></Grid>\n                        )\n                    }\n                </Grid>\n            </Grid>\n\n        )\n    };\n}\n\nexport default Home;","import React, { useState, useContext } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  errors: {\n    fontWeight: \"bolder\",\n    color: \"red\"\n  }\n}));\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  return valid;\n};\n\nfunction SignUp(props) {\n  const [formValues, setFormValues] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const defaultFormErrors = {\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    duplicate: \"\"\n  };\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    const newFieldValues = { ...formValues, [name]: value };\n    setFormValues(newFieldValues);\n\n    const newFormErrors = { ...formErrors };\n\n    switch (name) {\n      case \"username\":\n        newFormErrors.username =\n          value.length < 3 ? \"minimum of 3 characters required\" : \"\";\n        break;\n      case \"password\":\n        newFormErrors.password =\n          value.length < 6 ? \"minimum of 6 characters required\" : \"\";\n        break;\n      case \"confirmPassword\":\n        newFormErrors.confirmPassword =\n          formValues.password !== value ? \"Must match Password\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const user = useContext(UserContext);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const { username, password, confirmPassword } = formValues;\n    if (formValid(formErrors)) {\n      if (username && password === confirmPassword) {\n        const data = {\n          username: username,\n          password: password\n        };\n        API.signup(data)\n          .then(() => {\n            Auth.logIn(username, password, response => {\n              user.setUser(response);\n              props.history.push(\"/\");\n            });\n          })\n          .catch(err => {\n            console.log(err.response.data.error);\n            setFormErrors({\n              ...defaultFormErrors,\n              duplicate: \"Username is taken. Please try again.\"\n            });\n          });\n      }\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} onSubmit={submitHandler} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                noValidate\n                autoFocus\n                value={formValues.username}\n                onChange={changeHandler}\n              />\n              {formErrors.username.length > 0 && (\n                <span className={classes.errors}>{formErrors.username}</span>\n              )}\n              {formErrors.duplicate.length > 0 && (\n                <span className={classes.errors}>{formErrors.duplicate}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                noValidate\n                autoComplete=\"current-password\"\n                value={formValues.password}\n                onChange={changeHandler}\n              />\n              {formErrors.password.length > 0 && (\n                <span className={classes.errors}>{formErrors.password}</span>\n              )}\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                noValidate\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                value={formValues.confirmPassword}\n                onChange={changeHandler}\n              />\n              {formErrors.confirmPassword.length > 0 && (\n                <span className={classes.errors}>\n                  {formErrors.confirmPassword}\n                </span>\n              )}\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={submitHandler}\n          >\n            Sign Up\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                {\"Already have an account? Log In\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport SignUpForm from \"../components/SignUpForm\";\n\nfunction SignUpPage() {\n  return <SignUpForm />;\n}\n\nexport default SignUpPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        Auth.isLoggedIn() ? (\n            <Component {...props} />\n        ) : (\n            <Redirect to=\"/login\" />\n        )\n    )} />\n);\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: theme.spacing(3)\n  },\n  title: {\n    flexGrow: 1,\n    margin: 5,\n    [theme.breakpoints.down('xs')]: {\n      display: \"none\",\n    },\n    float: 'left',\n    font: \"bold 40px Times New Roman, Times, serif\"\n  },\n  avatar: {\n    margin: 5,\n    float: 'left'\n  },\n\n  link: {\n    color: 'white',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: \".75rem\",\n    },\n    textDecoration: \"none\"\n  },\n\n  appitems: {\n    [theme.breakpoints.down('xs')]: {\n      margin: \"0 auto\",\n    },\n  }\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  return (\n\n    <AppBar position=\"static\">\n      <Toolbar className={classes.appitems}>\n        {props.loggedIn ? <>\n          <img\n            src=\"../logo192.png\"\n            alt=\"logo\"\n            className={classes.avatar}\n            style={{ height: \"40px\" }}\n          />\n          <Typography variant=\"h4\" className={classes.title}>\n            Fermention\n          </Typography> <Button>\n            <Link color=\"inherit\" to=\"/home\" className={classes.link}>\n              Home\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/newbrew\" className={classes.link}>\n              New Brew\n            </Link>\n          </Button>\n          <Button>\n            <Link color=\"inherit\" to=\"/profile\" className={classes.link}>Profile</Link>\n          </Button></>\n          :\n          <div style={{ margin: '0 auto' }}>\n            <img\n              src=\"../logo192.png\"\n              alt=\"logo\"\n              className={classes.avatar}\n              style={{ width: \"50px\" }}\n            />\n            <Typography variant=\"h4\" className={classes.title}>\n              Fermention\n          </Typography></div>}\n      </Toolbar>\n    </AppBar>\n\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Profile from \"./pages/Profile\"\nimport Login from \"./pages/Login\"\nimport NewBrew from \"./pages/NewBrew\";\nimport Home from \"./pages/Home\";\nimport SignUp from \"./pages/SignUp\";\nimport { Container } from \"@material-ui/core\";\nimport UserContext from \"./context/UserContext\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport API from \"./utils/API\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport NavBar from \"./components/NavBar\";\nimport Auth from \"./utils/Auth\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#55370f'\n    },\n\n    secondary: {\n      main: '#722f48'\n    }\n\n  },\n});\n\nclass App extends Component {\n  state = {\n    user: null\n  }\n\n  setUser = user => {\n    this.setState({ user: user })\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      API.getUser()\n        .then(response => {\n          this.setUser(response.data)\n        })\n    }\n  }\n\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    let loggedIn = Auth.isLoggedIn();\n\n    return (\n      <>\n        <ThemeProvider theme={theme}>\n          <Container>\n            <Router>\n              <NavBar loggedIn={loggedIn} />\n              <UserContext.Provider\n                value={{\n                  user: user,\n                  setUser: setUser\n                }}\n              >\n                <ProtectedRoute exact path=\"/\" component={Home} />\n                <ProtectedRoute exact path=\"/home\" component={Home} />\n                <ProtectedRoute exact path=\"/newbrew\" component={NewBrew} />\n                <ProtectedRoute exact path=\"/profile\" component={Profile} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={SignUp} />\n              </UserContext.Provider>\n            </Router>\n          </Container>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}